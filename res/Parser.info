-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Parser.y
-----------------------------------------------------------------------------

state 9 contains 1 reduce/reduce conflicts.
state 27 contains 1 shift/reduce conflicts.
state 121 contains 21 shift/reduce conflicts.
state 137 contains 21 shift/reduce conflicts.
state 141 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Chunk                              (0)
	Chunk -> Block                                     (1)
	Block -> StatList Retstat                          (2)
	Block -> StatList                                  (3)
	StatList -> Stat                                   (4)
	StatList -> Stat StatList                          (5)
	Stat -> ';'                                        (6)
	Stat -> Varlist '=' Explist                        (7)
	Stat -> Functioncall                               (8)
	Stat -> Label                                      (9)
	Stat -> "break"                                    (10)
	Stat -> "goto" Name                                (11)
	Stat -> "do" Block "end"                           (12)
	Stat -> "while" Exp "do" Block "end"               (13)
	Stat -> "repeat" Block "until" Exp                 (14)
	Stat -> "if" Exp "then" Block ElseIfList ElseBlock "end"   (15)
	Stat -> "for" Name '=' Exp ',' Exp ',' Exp "do" Block "end"   (16)
	Stat -> "for" Name '=' Exp ',' Exp "do" Block "end"   (17)
	Stat -> "for" Namelist "in" Explist "do" Block "end"   (18)
	Stat -> "function" Funcname Funcbody               (19)
	Stat -> "local" "function" Name Funcbody           (20)
	Stat -> "local" Attnamelist '=' Explist            (21)
	Stat -> "local" Attnamelist                        (22)
	ElseIfList ->                                      (23)
	ElseIfList -> "elseif" Exp "then" Block ElseIfList   (24)
	ElseBlock ->                                       (25)
	ElseBlock -> "else" Block                          (26)
	Attnamelist -> Name Attrib                         (27)
	Attnamelist -> Name Attrib ',' Attnamelist         (28)
	Attrib -> '<' Name '>'                             (29)
	Attrib ->                                          (30)
	Retstat -> "return" Explist ';'                    (31)
	Retstat -> "return" Explist                        (32)
	Retstat -> "return" ';'                            (33)
	Retstat -> "return"                                (34)
	Label -> "::" Name "::"                            (35)
	Funcname -> Name                                   (36)
	Funcname -> Name FuncnameDotList ':' Name          (37)
	Funcname -> Name FuncnameDotList                   (38)
	FuncnameDotList -> '.' Name                        (39)
	FuncnameDotList -> FuncnameDotList '.' Name        (40)
	Varlist -> Var                                     (41)
	Varlist -> Var ',' Varlist                         (42)
	Var -> Name                                        (43)
	Var -> Prefixexp '[' Exp ']'                       (44)
	Var -> Prefixexp '.' Name                          (45)
	Namelist -> Name                                   (46)
	Namelist -> Name ',' Namelist                      (47)
	Explist -> Exp                                     (48)
	Explist -> Exp ',' Explist                         (49)
	Exp -> "nil"                                       (50)
	Exp -> "false"                                     (51)
	Exp -> "true"                                      (52)
	Exp -> Float                                       (53)
	Exp -> Integer                                     (54)
	Exp -> LiteralString                               (55)
	Exp -> "..."                                       (56)
	Exp -> Functiondef                                 (57)
	Exp -> Prefixexp                                   (58)
	Exp -> Tableconstructor                            (59)
	Exp -> Exp Binop Exp                               (60)
	Exp -> Unop Exp                                    (61)
	Prefixexp -> Var                                   (62)
	Prefixexp -> Functioncall                          (63)
	Prefixexp -> '(' Exp ')'                           (64)
	Functioncall -> Prefixexp Args                     (65)
	Functioncall -> Prefixexp ':' Name Args            (66)
	Args -> '(' Explist ')'                            (67)
	Args -> Tableconstructor                           (68)
	Args -> LiteralString                              (69)
	Functiondef -> "function" Funcbody                 (70)
	Funcbody -> '(' Parlist ')' Block "end"            (71)
	Parlist -> Namelist ',' "..."                      (72)
	Parlist -> "..."                                   (73)
	Tableconstructor -> '{' Fieldlist '}'              (74)
	Fieldlist -> Field                                 (75)
	Fieldlist -> Field Fieldsep Fieldlist              (76)
	Fieldlist -> Field Fieldsep                        (77)
	Field -> '[' Exp ']' '=' Exp                       (78)
	Field -> Name '=' Exp                              (79)
	Field -> Exp                                       (80)
	Fieldsep -> ','                                    (81)
	Fieldsep -> ';'                                    (82)
	Binop -> '+'                                       (83)
	Binop -> '-'                                       (84)
	Binop -> '*'                                       (85)
	Binop -> '/'                                       (86)
	Binop -> "//"                                      (87)
	Binop -> '^'                                       (88)
	Binop -> '%'                                       (89)
	Binop -> '&'                                       (90)
	Binop -> '~'                                       (91)
	Binop -> '|'                                       (92)
	Binop -> ">>"                                      (93)
	Binop -> "<<"                                      (94)
	Binop -> ".."                                      (95)
	Binop -> '<'                                       (96)
	Binop -> "<="                                      (97)
	Binop -> '>'                                       (98)
	Binop -> ">="                                      (99)
	Binop -> "=="                                      (100)
	Binop -> "~="                                      (101)
	Binop -> "and"                                     (102)
	Binop -> "or"                                      (103)
	Unop -> '-'                                        (104)
	Unop -> "not"                                      (105)
	Unop -> '#'                                        (106)
	Unop -> '~'                                        (107)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	"and"          { TokenAnd }
	"break"        { TokenBreak }
	"do"           { TokenDo }
	"else"         { TokenElse }
	"elseif"       { TokenElseif }
	"end"          { TokenEnd }
	"false"        { TokenFalse }
	"for"          { TokenFor }
	"function"     { TokenFunction }
	"goto"         { TokenGoto }
	"if"           { TokenIf }
	"in"           { TokenIn }
	"local"        { TokenLocal }
	"nil"          { TokenNil }
	"not"          { TokenNot }
	"or"           { TokenOr }
	"repeat"       { TokenRepeat }
	"return"       { TokenReturn }
	"then"         { TokenThen }
	"true"         { TokenTrue }
	"until"        { TokenUntil }
	"while"        { TokenWhile }
	'+'            { TokenAdd }
	'-'            { TokenMinus }
	'*'            { TokenMutiply }
	'/'            { TokenDevide }
	'%'            { TokenModulus }
	'^'            { TokenPower }
	'#'            { TokenLength }
	'&'            { TokenBitwiseAnd }
	'~'            { TokenBitwiseNot }
	'|'            { TokenBitwiseOr }
	"<<"           { TokenLeftShift }
	">>"           { TokenRightShift }
	"//"           { TokenFloorDivision }
	"=="           { TokenEquals }
	"~="           { TokenNotEquals }
	"<="           { TokenLessThanEquals }
	">="           { TokenGreaterThanEquals }
	'<'            { TokenLessThan }
	'>'            { TokenGreaterThan }
	'='            { TokenAssign }
	'('            { TokenLeftParentheses }
	')'            { TokenRightParentheses }
	'{'            { TokenLeftBrace }
	'}'            { TokenRightBrace }
	'['            { TokenLeftBracket }
	']'            { TokenRightBracket }
	"::"           { TokenDoubleColon }
	';'            { TokenSemicolon }
	':'            { TokenColon }
	','            { TokenComma }
	'.'            { TokenDot }
	".."           { TokenConcat }
	"..."          { TokenVararg }
	Integer        { TokenInteger $$ }
	Float          { TokenFloat $$ }
	Name           { TokenIdentifier $$ }
	LiteralString  { TokenString $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Chunk           rule  1
	Block           rules 2, 3
	StatList        rules 4, 5
	Stat            rules 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
	ElseIfList      rules 23, 24
	ElseBlock       rules 25, 26
	Attnamelist     rules 27, 28
	Attrib          rules 29, 30
	Retstat         rules 31, 32, 33, 34
	Label           rule  35
	Funcname        rules 36, 37, 38
	FuncnameDotList rules 39, 40
	Varlist         rules 41, 42
	Var             rules 43, 44, 45
	Namelist        rules 46, 47
	Explist         rules 48, 49
	Exp             rules 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61
	Prefixexp       rules 62, 63, 64
	Functioncall    rules 65, 66
	Args            rules 67, 68, 69
	Functiondef     rule  70
	Funcbody        rule  71
	Parlist         rules 72, 73
	Tableconstructor rule  74
	Fieldlist       rules 75, 76, 77
	Field           rules 78, 79, 80
	Fieldsep        rules 81, 82
	Binop           rules 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103
	Unop            rules 104, 105, 106, 107

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parse -> . Chunk                             (rule 0)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22

	Chunk          goto state 23
	Block          goto state 2
	StatList       goto state 3
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 1

	Chunk -> . Block                                    (rule 1)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22

	Block          goto state 2
	StatList       goto state 3
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 2

	Chunk -> Block .                                    (rule 1)

	%eof           reduce using rule 1


State 3

	Block -> StatList . Retstat                         (rule 2)
	Block -> StatList .                                 (rule 3)

	"else"         reduce using rule 3
	"elseif"       reduce using rule 3
	"end"          reduce using rule 3
	"return"       shift, and enter state 68
	"until"        reduce using rule 3
	%eof           reduce using rule 3

	Retstat        goto state 67

State 4

	StatList -> Stat .                                  (rule 4)
	StatList -> Stat . StatList                         (rule 5)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"else"         reduce using rule 4
	"elseif"       reduce using rule 4
	"end"          reduce using rule 4
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"return"       reduce using rule 4
	"until"        reduce using rule 4
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22
	%eof           reduce using rule 4

	StatList       goto state 66
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 5

	Stat -> Label .                                     (rule 9)

	"break"        reduce using rule 9
	"do"           reduce using rule 9
	"else"         reduce using rule 9
	"elseif"       reduce using rule 9
	"end"          reduce using rule 9
	"for"          reduce using rule 9
	"function"     reduce using rule 9
	"goto"         reduce using rule 9
	"if"           reduce using rule 9
	"local"        reduce using rule 9
	"repeat"       reduce using rule 9
	"return"       reduce using rule 9
	"until"        reduce using rule 9
	"while"        reduce using rule 9
	'('            reduce using rule 9
	"::"           reduce using rule 9
	';'            reduce using rule 9
	Name           reduce using rule 9
	%eof           reduce using rule 9


State 6

	Stat -> Varlist . '=' Explist                       (rule 7)

	'='            shift, and enter state 65


State 7

	Varlist -> Var .                                    (rule 41)
	Varlist -> Var . ',' Varlist                        (rule 42)
	Prefixexp -> Var .                                  (rule 62)

	'='            reduce using rule 41
	'('            reduce using rule 62
	'{'            reduce using rule 62
	'['            reduce using rule 62
	':'            reduce using rule 62
	','            shift, and enter state 64
	'.'            reduce using rule 62
	LiteralString  reduce using rule 62


State 8

	Var -> Prefixexp . '[' Exp ']'                      (rule 44)
	Var -> Prefixexp . '.' Name                         (rule 45)
	Functioncall -> Prefixexp . Args                    (rule 65)
	Functioncall -> Prefixexp . ':' Name Args           (rule 66)

	'('            shift, and enter state 59
	'{'            shift, and enter state 40
	'['            shift, and enter state 60
	':'            shift, and enter state 61
	'.'            shift, and enter state 62
	LiteralString  shift, and enter state 63

	Args           goto state 57
	Tableconstructorgoto state 58

State 9

	Stat -> Functioncall .                              (rule 8)
	Prefixexp -> Functioncall .                         (rule 63)

	"break"        reduce using rule 8
	"do"           reduce using rule 8
	"else"         reduce using rule 8
	"elseif"       reduce using rule 8
	"end"          reduce using rule 8
	"for"          reduce using rule 8
	"function"     reduce using rule 8
	"goto"         reduce using rule 8
	"if"           reduce using rule 8
	"local"        reduce using rule 8
	"repeat"       reduce using rule 8
	"return"       reduce using rule 8
	"until"        reduce using rule 8
	"while"        reduce using rule 8
	'('            reduce using rule 63
			(reduce using rule 8)

	'{'            reduce using rule 63
	'['            reduce using rule 63
	"::"           reduce using rule 8
	';'            reduce using rule 8
	':'            reduce using rule 63
	'.'            reduce using rule 63
	Name           reduce using rule 8
	LiteralString  reduce using rule 63
	%eof           reduce using rule 8


State 10

	Stat -> "break" .                                   (rule 10)

	"break"        reduce using rule 10
	"do"           reduce using rule 10
	"else"         reduce using rule 10
	"elseif"       reduce using rule 10
	"end"          reduce using rule 10
	"for"          reduce using rule 10
	"function"     reduce using rule 10
	"goto"         reduce using rule 10
	"if"           reduce using rule 10
	"local"        reduce using rule 10
	"repeat"       reduce using rule 10
	"return"       reduce using rule 10
	"until"        reduce using rule 10
	"while"        reduce using rule 10
	'('            reduce using rule 10
	"::"           reduce using rule 10
	';'            reduce using rule 10
	Name           reduce using rule 10
	%eof           reduce using rule 10


State 11

	Stat -> "do" . Block "end"                          (rule 12)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22

	Block          goto state 56
	StatList       goto state 3
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 12

	Stat -> "for" . Name '=' Exp ',' Exp ',' Exp "do" Block "end"    (rule 16)
	Stat -> "for" . Name '=' Exp ',' Exp "do" Block "end"    (rule 17)
	Stat -> "for" . Namelist "in" Explist "do" Block "end"    (rule 18)

	Name           shift, and enter state 55

	Namelist       goto state 54

State 13

	Stat -> "function" . Funcname Funcbody              (rule 19)

	Name           shift, and enter state 53

	Funcname       goto state 52

State 14

	Stat -> "goto" . Name                               (rule 11)

	Name           shift, and enter state 51


State 15

	Stat -> "if" . Exp "then" Block ElseIfList ElseBlock "end"    (rule 15)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 50
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 16

	Stat -> "local" . "function" Name Funcbody          (rule 20)
	Stat -> "local" . Attnamelist '=' Explist           (rule 21)
	Stat -> "local" . Attnamelist                       (rule 22)

	"function"     shift, and enter state 48
	Name           shift, and enter state 49

	Attnamelist    goto state 47

State 17

	Stat -> "repeat" . Block "until" Exp                (rule 14)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22

	Block          goto state 46
	StatList       goto state 3
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 18

	Stat -> "while" . Exp "do" Block "end"              (rule 13)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 45
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 19

	Prefixexp -> '(' . Exp ')'                          (rule 64)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 26
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 20

	Label -> "::" . Name "::"                           (rule 35)

	Name           shift, and enter state 24


State 21

	Stat -> ';' .                                       (rule 6)

	"break"        reduce using rule 6
	"do"           reduce using rule 6
	"else"         reduce using rule 6
	"elseif"       reduce using rule 6
	"end"          reduce using rule 6
	"for"          reduce using rule 6
	"function"     reduce using rule 6
	"goto"         reduce using rule 6
	"if"           reduce using rule 6
	"local"        reduce using rule 6
	"repeat"       reduce using rule 6
	"return"       reduce using rule 6
	"until"        reduce using rule 6
	"while"        reduce using rule 6
	'('            reduce using rule 6
	"::"           reduce using rule 6
	';'            reduce using rule 6
	Name           reduce using rule 6
	%eof           reduce using rule 6


State 22

	Var -> Name .                                       (rule 43)

	"and"          reduce using rule 43
	"break"        reduce using rule 43
	"do"           reduce using rule 43
	"else"         reduce using rule 43
	"elseif"       reduce using rule 43
	"end"          reduce using rule 43
	"for"          reduce using rule 43
	"function"     reduce using rule 43
	"goto"         reduce using rule 43
	"if"           reduce using rule 43
	"local"        reduce using rule 43
	"or"           reduce using rule 43
	"repeat"       reduce using rule 43
	"return"       reduce using rule 43
	"then"         reduce using rule 43
	"until"        reduce using rule 43
	"while"        reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	'%'            reduce using rule 43
	'^'            reduce using rule 43
	'&'            reduce using rule 43
	'~'            reduce using rule 43
	'|'            reduce using rule 43
	"<<"           reduce using rule 43
	">>"           reduce using rule 43
	"//"           reduce using rule 43
	"=="           reduce using rule 43
	"~="           reduce using rule 43
	"<="           reduce using rule 43
	">="           reduce using rule 43
	'<'            reduce using rule 43
	'>'            reduce using rule 43
	'='            reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	"::"           reduce using rule 43
	';'            reduce using rule 43
	':'            reduce using rule 43
	','            reduce using rule 43
	'.'            reduce using rule 43
	".."           reduce using rule 43
	Name           reduce using rule 43
	LiteralString  reduce using rule 43
	%eof           reduce using rule 43


State 23

	%start_parse -> Chunk .                             (rule 0)

	%eof           accept


State 24

	Label -> "::" Name . "::"                           (rule 35)

	"::"           shift, and enter state 123


State 25

	Prefixexp -> Var .                                  (rule 62)

	"and"          reduce using rule 62
	"break"        reduce using rule 62
	"do"           reduce using rule 62
	"else"         reduce using rule 62
	"elseif"       reduce using rule 62
	"end"          reduce using rule 62
	"for"          reduce using rule 62
	"function"     reduce using rule 62
	"goto"         reduce using rule 62
	"if"           reduce using rule 62
	"local"        reduce using rule 62
	"or"           reduce using rule 62
	"repeat"       reduce using rule 62
	"return"       reduce using rule 62
	"then"         reduce using rule 62
	"until"        reduce using rule 62
	"while"        reduce using rule 62
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'*'            reduce using rule 62
	'/'            reduce using rule 62
	'%'            reduce using rule 62
	'^'            reduce using rule 62
	'&'            reduce using rule 62
	'~'            reduce using rule 62
	'|'            reduce using rule 62
	"<<"           reduce using rule 62
	">>"           reduce using rule 62
	"//"           reduce using rule 62
	"=="           reduce using rule 62
	"~="           reduce using rule 62
	"<="           reduce using rule 62
	">="           reduce using rule 62
	'<'            reduce using rule 62
	'>'            reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'{'            reduce using rule 62
	'}'            reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	"::"           reduce using rule 62
	';'            reduce using rule 62
	':'            reduce using rule 62
	','            reduce using rule 62
	'.'            reduce using rule 62
	".."           reduce using rule 62
	Name           reduce using rule 62
	LiteralString  reduce using rule 62
	%eof           reduce using rule 62


State 26

	Exp -> Exp . Binop Exp                              (rule 60)
	Prefixexp -> '(' Exp . ')'                          (rule 64)

	"and"          shift, and enter state 87
	"or"           shift, and enter state 88
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	')'            shift, and enter state 122
	".."           shift, and enter state 108

	Binop          goto state 86

State 27

	Var -> Prefixexp . '[' Exp ']'                      (rule 44)
	Var -> Prefixexp . '.' Name                         (rule 45)
	Exp -> Prefixexp .                                  (rule 58)
	Functioncall -> Prefixexp . Args                    (rule 65)
	Functioncall -> Prefixexp . ':' Name Args           (rule 66)

	"and"          reduce using rule 58
	"break"        reduce using rule 58
	"do"           reduce using rule 58
	"else"         reduce using rule 58
	"elseif"       reduce using rule 58
	"end"          reduce using rule 58
	"for"          reduce using rule 58
	"function"     reduce using rule 58
	"goto"         reduce using rule 58
	"if"           reduce using rule 58
	"local"        reduce using rule 58
	"or"           reduce using rule 58
	"repeat"       reduce using rule 58
	"return"       reduce using rule 58
	"then"         reduce using rule 58
	"until"        reduce using rule 58
	"while"        reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'%'            reduce using rule 58
	'^'            reduce using rule 58
	'&'            reduce using rule 58
	'~'            reduce using rule 58
	'|'            reduce using rule 58
	"<<"           reduce using rule 58
	">>"           reduce using rule 58
	"//"           reduce using rule 58
	"=="           reduce using rule 58
	"~="           reduce using rule 58
	"<="           reduce using rule 58
	">="           reduce using rule 58
	'<'            reduce using rule 58
	'>'            reduce using rule 58
	'('            shift, and enter state 59
			(reduce using rule 58)

	')'            reduce using rule 58
	'{'            shift, and enter state 40
	'}'            reduce using rule 58
	'['            shift, and enter state 60
	']'            reduce using rule 58
	"::"           reduce using rule 58
	';'            reduce using rule 58
	':'            shift, and enter state 61
	','            reduce using rule 58
	'.'            shift, and enter state 62
	".."           reduce using rule 58
	Name           reduce using rule 58
	LiteralString  shift, and enter state 63
	%eof           reduce using rule 58

	Args           goto state 57
	Tableconstructorgoto state 58

State 28

	Prefixexp -> Functioncall .                         (rule 63)

	"and"          reduce using rule 63
	"break"        reduce using rule 63
	"do"           reduce using rule 63
	"else"         reduce using rule 63
	"elseif"       reduce using rule 63
	"end"          reduce using rule 63
	"for"          reduce using rule 63
	"function"     reduce using rule 63
	"goto"         reduce using rule 63
	"if"           reduce using rule 63
	"local"        reduce using rule 63
	"or"           reduce using rule 63
	"repeat"       reduce using rule 63
	"return"       reduce using rule 63
	"then"         reduce using rule 63
	"until"        reduce using rule 63
	"while"        reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'*'            reduce using rule 63
	'/'            reduce using rule 63
	'%'            reduce using rule 63
	'^'            reduce using rule 63
	'&'            reduce using rule 63
	'~'            reduce using rule 63
	'|'            reduce using rule 63
	"<<"           reduce using rule 63
	">>"           reduce using rule 63
	"//"           reduce using rule 63
	"=="           reduce using rule 63
	"~="           reduce using rule 63
	"<="           reduce using rule 63
	">="           reduce using rule 63
	'<'            reduce using rule 63
	'>'            reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'{'            reduce using rule 63
	'}'            reduce using rule 63
	'['            reduce using rule 63
	']'            reduce using rule 63
	"::"           reduce using rule 63
	';'            reduce using rule 63
	':'            reduce using rule 63
	','            reduce using rule 63
	'.'            reduce using rule 63
	".."           reduce using rule 63
	Name           reduce using rule 63
	LiteralString  reduce using rule 63
	%eof           reduce using rule 63


State 29

	Exp -> Functiondef .                                (rule 57)

	"and"          reduce using rule 57
	"break"        reduce using rule 57
	"do"           reduce using rule 57
	"else"         reduce using rule 57
	"elseif"       reduce using rule 57
	"end"          reduce using rule 57
	"for"          reduce using rule 57
	"function"     reduce using rule 57
	"goto"         reduce using rule 57
	"if"           reduce using rule 57
	"local"        reduce using rule 57
	"or"           reduce using rule 57
	"repeat"       reduce using rule 57
	"return"       reduce using rule 57
	"then"         reduce using rule 57
	"until"        reduce using rule 57
	"while"        reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'%'            reduce using rule 57
	'^'            reduce using rule 57
	'&'            reduce using rule 57
	'~'            reduce using rule 57
	'|'            reduce using rule 57
	"<<"           reduce using rule 57
	">>"           reduce using rule 57
	"//"           reduce using rule 57
	"=="           reduce using rule 57
	"~="           reduce using rule 57
	"<="           reduce using rule 57
	">="           reduce using rule 57
	'<'            reduce using rule 57
	'>'            reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'}'            reduce using rule 57
	']'            reduce using rule 57
	"::"           reduce using rule 57
	';'            reduce using rule 57
	','            reduce using rule 57
	".."           reduce using rule 57
	Name           reduce using rule 57
	%eof           reduce using rule 57


State 30

	Exp -> Tableconstructor .                           (rule 59)

	"and"          reduce using rule 59
	"break"        reduce using rule 59
	"do"           reduce using rule 59
	"else"         reduce using rule 59
	"elseif"       reduce using rule 59
	"end"          reduce using rule 59
	"for"          reduce using rule 59
	"function"     reduce using rule 59
	"goto"         reduce using rule 59
	"if"           reduce using rule 59
	"local"        reduce using rule 59
	"or"           reduce using rule 59
	"repeat"       reduce using rule 59
	"return"       reduce using rule 59
	"then"         reduce using rule 59
	"until"        reduce using rule 59
	"while"        reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'%'            reduce using rule 59
	'^'            reduce using rule 59
	'&'            reduce using rule 59
	'~'            reduce using rule 59
	'|'            reduce using rule 59
	"<<"           reduce using rule 59
	">>"           reduce using rule 59
	"//"           reduce using rule 59
	"=="           reduce using rule 59
	"~="           reduce using rule 59
	"<="           reduce using rule 59
	">="           reduce using rule 59
	'<'            reduce using rule 59
	'>'            reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'}'            reduce using rule 59
	']'            reduce using rule 59
	"::"           reduce using rule 59
	';'            reduce using rule 59
	','            reduce using rule 59
	".."           reduce using rule 59
	Name           reduce using rule 59
	%eof           reduce using rule 59


State 31

	Exp -> Unop . Exp                                   (rule 61)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 121
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 32

	Exp -> "false" .                                    (rule 51)

	"and"          reduce using rule 51
	"break"        reduce using rule 51
	"do"           reduce using rule 51
	"else"         reduce using rule 51
	"elseif"       reduce using rule 51
	"end"          reduce using rule 51
	"for"          reduce using rule 51
	"function"     reduce using rule 51
	"goto"         reduce using rule 51
	"if"           reduce using rule 51
	"local"        reduce using rule 51
	"or"           reduce using rule 51
	"repeat"       reduce using rule 51
	"return"       reduce using rule 51
	"then"         reduce using rule 51
	"until"        reduce using rule 51
	"while"        reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'%'            reduce using rule 51
	'^'            reduce using rule 51
	'&'            reduce using rule 51
	'~'            reduce using rule 51
	'|'            reduce using rule 51
	"<<"           reduce using rule 51
	">>"           reduce using rule 51
	"//"           reduce using rule 51
	"=="           reduce using rule 51
	"~="           reduce using rule 51
	"<="           reduce using rule 51
	">="           reduce using rule 51
	'<'            reduce using rule 51
	'>'            reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'}'            reduce using rule 51
	']'            reduce using rule 51
	"::"           reduce using rule 51
	';'            reduce using rule 51
	','            reduce using rule 51
	".."           reduce using rule 51
	Name           reduce using rule 51
	%eof           reduce using rule 51


State 33

	Functiondef -> "function" . Funcbody                (rule 70)

	'('            shift, and enter state 85

	Funcbody       goto state 120

State 34

	Exp -> "nil" .                                      (rule 50)

	"and"          reduce using rule 50
	"break"        reduce using rule 50
	"do"           reduce using rule 50
	"else"         reduce using rule 50
	"elseif"       reduce using rule 50
	"end"          reduce using rule 50
	"for"          reduce using rule 50
	"function"     reduce using rule 50
	"goto"         reduce using rule 50
	"if"           reduce using rule 50
	"local"        reduce using rule 50
	"or"           reduce using rule 50
	"repeat"       reduce using rule 50
	"return"       reduce using rule 50
	"then"         reduce using rule 50
	"until"        reduce using rule 50
	"while"        reduce using rule 50
	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	'%'            reduce using rule 50
	'^'            reduce using rule 50
	'&'            reduce using rule 50
	'~'            reduce using rule 50
	'|'            reduce using rule 50
	"<<"           reduce using rule 50
	">>"           reduce using rule 50
	"//"           reduce using rule 50
	"=="           reduce using rule 50
	"~="           reduce using rule 50
	"<="           reduce using rule 50
	">="           reduce using rule 50
	'<'            reduce using rule 50
	'>'            reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'}'            reduce using rule 50
	']'            reduce using rule 50
	"::"           reduce using rule 50
	';'            reduce using rule 50
	','            reduce using rule 50
	".."           reduce using rule 50
	Name           reduce using rule 50
	%eof           reduce using rule 50


State 35

	Unop -> "not" .                                     (rule 105)

	"false"        reduce using rule 105
	"function"     reduce using rule 105
	"nil"          reduce using rule 105
	"not"          reduce using rule 105
	"true"         reduce using rule 105
	'-'            reduce using rule 105
	'#'            reduce using rule 105
	'~'            reduce using rule 105
	'('            reduce using rule 105
	'{'            reduce using rule 105
	"..."          reduce using rule 105
	Integer        reduce using rule 105
	Float          reduce using rule 105
	Name           reduce using rule 105
	LiteralString  reduce using rule 105


State 36

	Exp -> "true" .                                     (rule 52)

	"and"          reduce using rule 52
	"break"        reduce using rule 52
	"do"           reduce using rule 52
	"else"         reduce using rule 52
	"elseif"       reduce using rule 52
	"end"          reduce using rule 52
	"for"          reduce using rule 52
	"function"     reduce using rule 52
	"goto"         reduce using rule 52
	"if"           reduce using rule 52
	"local"        reduce using rule 52
	"or"           reduce using rule 52
	"repeat"       reduce using rule 52
	"return"       reduce using rule 52
	"then"         reduce using rule 52
	"until"        reduce using rule 52
	"while"        reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'%'            reduce using rule 52
	'^'            reduce using rule 52
	'&'            reduce using rule 52
	'~'            reduce using rule 52
	'|'            reduce using rule 52
	"<<"           reduce using rule 52
	">>"           reduce using rule 52
	"//"           reduce using rule 52
	"=="           reduce using rule 52
	"~="           reduce using rule 52
	"<="           reduce using rule 52
	">="           reduce using rule 52
	'<'            reduce using rule 52
	'>'            reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'}'            reduce using rule 52
	']'            reduce using rule 52
	"::"           reduce using rule 52
	';'            reduce using rule 52
	','            reduce using rule 52
	".."           reduce using rule 52
	Name           reduce using rule 52
	%eof           reduce using rule 52


State 37

	Unop -> '-' .                                       (rule 104)

	"false"        reduce using rule 104
	"function"     reduce using rule 104
	"nil"          reduce using rule 104
	"not"          reduce using rule 104
	"true"         reduce using rule 104
	'-'            reduce using rule 104
	'#'            reduce using rule 104
	'~'            reduce using rule 104
	'('            reduce using rule 104
	'{'            reduce using rule 104
	"..."          reduce using rule 104
	Integer        reduce using rule 104
	Float          reduce using rule 104
	Name           reduce using rule 104
	LiteralString  reduce using rule 104


State 38

	Unop -> '#' .                                       (rule 106)

	"false"        reduce using rule 106
	"function"     reduce using rule 106
	"nil"          reduce using rule 106
	"not"          reduce using rule 106
	"true"         reduce using rule 106
	'-'            reduce using rule 106
	'#'            reduce using rule 106
	'~'            reduce using rule 106
	'('            reduce using rule 106
	'{'            reduce using rule 106
	"..."          reduce using rule 106
	Integer        reduce using rule 106
	Float          reduce using rule 106
	Name           reduce using rule 106
	LiteralString  reduce using rule 106


State 39

	Unop -> '~' .                                       (rule 107)

	"false"        reduce using rule 107
	"function"     reduce using rule 107
	"nil"          reduce using rule 107
	"not"          reduce using rule 107
	"true"         reduce using rule 107
	'-'            reduce using rule 107
	'#'            reduce using rule 107
	'~'            reduce using rule 107
	'('            reduce using rule 107
	'{'            reduce using rule 107
	"..."          reduce using rule 107
	Integer        reduce using rule 107
	Float          reduce using rule 107
	Name           reduce using rule 107
	LiteralString  reduce using rule 107


State 40

	Tableconstructor -> '{' . Fieldlist '}'             (rule 74)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	'['            shift, and enter state 118
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 119
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 115
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Fieldlist      goto state 116
	Field          goto state 117
	Unop           goto state 31

State 41

	Exp -> "..." .                                      (rule 56)

	"and"          reduce using rule 56
	"break"        reduce using rule 56
	"do"           reduce using rule 56
	"else"         reduce using rule 56
	"elseif"       reduce using rule 56
	"end"          reduce using rule 56
	"for"          reduce using rule 56
	"function"     reduce using rule 56
	"goto"         reduce using rule 56
	"if"           reduce using rule 56
	"local"        reduce using rule 56
	"or"           reduce using rule 56
	"repeat"       reduce using rule 56
	"return"       reduce using rule 56
	"then"         reduce using rule 56
	"until"        reduce using rule 56
	"while"        reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'%'            reduce using rule 56
	'^'            reduce using rule 56
	'&'            reduce using rule 56
	'~'            reduce using rule 56
	'|'            reduce using rule 56
	"<<"           reduce using rule 56
	">>"           reduce using rule 56
	"//"           reduce using rule 56
	"=="           reduce using rule 56
	"~="           reduce using rule 56
	"<="           reduce using rule 56
	">="           reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'}'            reduce using rule 56
	']'            reduce using rule 56
	"::"           reduce using rule 56
	';'            reduce using rule 56
	','            reduce using rule 56
	".."           reduce using rule 56
	Name           reduce using rule 56
	%eof           reduce using rule 56


State 42

	Exp -> Integer .                                    (rule 54)

	"and"          reduce using rule 54
	"break"        reduce using rule 54
	"do"           reduce using rule 54
	"else"         reduce using rule 54
	"elseif"       reduce using rule 54
	"end"          reduce using rule 54
	"for"          reduce using rule 54
	"function"     reduce using rule 54
	"goto"         reduce using rule 54
	"if"           reduce using rule 54
	"local"        reduce using rule 54
	"or"           reduce using rule 54
	"repeat"       reduce using rule 54
	"return"       reduce using rule 54
	"then"         reduce using rule 54
	"until"        reduce using rule 54
	"while"        reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'%'            reduce using rule 54
	'^'            reduce using rule 54
	'&'            reduce using rule 54
	'~'            reduce using rule 54
	'|'            reduce using rule 54
	"<<"           reduce using rule 54
	">>"           reduce using rule 54
	"//"           reduce using rule 54
	"=="           reduce using rule 54
	"~="           reduce using rule 54
	"<="           reduce using rule 54
	">="           reduce using rule 54
	'<'            reduce using rule 54
	'>'            reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'}'            reduce using rule 54
	']'            reduce using rule 54
	"::"           reduce using rule 54
	';'            reduce using rule 54
	','            reduce using rule 54
	".."           reduce using rule 54
	Name           reduce using rule 54
	%eof           reduce using rule 54


State 43

	Exp -> Float .                                      (rule 53)

	"and"          reduce using rule 53
	"break"        reduce using rule 53
	"do"           reduce using rule 53
	"else"         reduce using rule 53
	"elseif"       reduce using rule 53
	"end"          reduce using rule 53
	"for"          reduce using rule 53
	"function"     reduce using rule 53
	"goto"         reduce using rule 53
	"if"           reduce using rule 53
	"local"        reduce using rule 53
	"or"           reduce using rule 53
	"repeat"       reduce using rule 53
	"return"       reduce using rule 53
	"then"         reduce using rule 53
	"until"        reduce using rule 53
	"while"        reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'%'            reduce using rule 53
	'^'            reduce using rule 53
	'&'            reduce using rule 53
	'~'            reduce using rule 53
	'|'            reduce using rule 53
	"<<"           reduce using rule 53
	">>"           reduce using rule 53
	"//"           reduce using rule 53
	"=="           reduce using rule 53
	"~="           reduce using rule 53
	"<="           reduce using rule 53
	">="           reduce using rule 53
	'<'            reduce using rule 53
	'>'            reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'}'            reduce using rule 53
	']'            reduce using rule 53
	"::"           reduce using rule 53
	';'            reduce using rule 53
	','            reduce using rule 53
	".."           reduce using rule 53
	Name           reduce using rule 53
	%eof           reduce using rule 53


State 44

	Exp -> LiteralString .                              (rule 55)

	"and"          reduce using rule 55
	"break"        reduce using rule 55
	"do"           reduce using rule 55
	"else"         reduce using rule 55
	"elseif"       reduce using rule 55
	"end"          reduce using rule 55
	"for"          reduce using rule 55
	"function"     reduce using rule 55
	"goto"         reduce using rule 55
	"if"           reduce using rule 55
	"local"        reduce using rule 55
	"or"           reduce using rule 55
	"repeat"       reduce using rule 55
	"return"       reduce using rule 55
	"then"         reduce using rule 55
	"until"        reduce using rule 55
	"while"        reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'%'            reduce using rule 55
	'^'            reduce using rule 55
	'&'            reduce using rule 55
	'~'            reduce using rule 55
	'|'            reduce using rule 55
	"<<"           reduce using rule 55
	">>"           reduce using rule 55
	"//"           reduce using rule 55
	"=="           reduce using rule 55
	"~="           reduce using rule 55
	"<="           reduce using rule 55
	">="           reduce using rule 55
	'<'            reduce using rule 55
	'>'            reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'}'            reduce using rule 55
	']'            reduce using rule 55
	"::"           reduce using rule 55
	';'            reduce using rule 55
	','            reduce using rule 55
	".."           reduce using rule 55
	Name           reduce using rule 55
	%eof           reduce using rule 55


State 45

	Stat -> "while" Exp . "do" Block "end"              (rule 13)
	Exp -> Exp . Binop Exp                              (rule 60)

	"and"          shift, and enter state 87
	"do"           shift, and enter state 114
	"or"           shift, and enter state 88
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	".."           shift, and enter state 108

	Binop          goto state 86

State 46

	Stat -> "repeat" Block . "until" Exp                (rule 14)

	"until"        shift, and enter state 113


State 47

	Stat -> "local" Attnamelist . '=' Explist           (rule 21)
	Stat -> "local" Attnamelist .                       (rule 22)

	"break"        reduce using rule 22
	"do"           reduce using rule 22
	"else"         reduce using rule 22
	"elseif"       reduce using rule 22
	"end"          reduce using rule 22
	"for"          reduce using rule 22
	"function"     reduce using rule 22
	"goto"         reduce using rule 22
	"if"           reduce using rule 22
	"local"        reduce using rule 22
	"repeat"       reduce using rule 22
	"return"       reduce using rule 22
	"until"        reduce using rule 22
	"while"        reduce using rule 22
	'='            shift, and enter state 112
	'('            reduce using rule 22
	"::"           reduce using rule 22
	';'            reduce using rule 22
	Name           reduce using rule 22
	%eof           reduce using rule 22


State 48

	Stat -> "local" "function" . Name Funcbody          (rule 20)

	Name           shift, and enter state 111


State 49

	Attnamelist -> Name . Attrib                        (rule 27)
	Attnamelist -> Name . Attrib ',' Attnamelist        (rule 28)

	"break"        reduce using rule 30
	"do"           reduce using rule 30
	"else"         reduce using rule 30
	"elseif"       reduce using rule 30
	"end"          reduce using rule 30
	"for"          reduce using rule 30
	"function"     reduce using rule 30
	"goto"         reduce using rule 30
	"if"           reduce using rule 30
	"local"        reduce using rule 30
	"repeat"       reduce using rule 30
	"return"       reduce using rule 30
	"until"        reduce using rule 30
	"while"        reduce using rule 30
	'<'            shift, and enter state 110
	'='            reduce using rule 30
	'('            reduce using rule 30
	"::"           reduce using rule 30
	';'            reduce using rule 30
	','            reduce using rule 30
	Name           reduce using rule 30
	%eof           reduce using rule 30

	Attrib         goto state 109

State 50

	Stat -> "if" Exp . "then" Block ElseIfList ElseBlock "end"    (rule 15)
	Exp -> Exp . Binop Exp                              (rule 60)

	"and"          shift, and enter state 87
	"or"           shift, and enter state 88
	"then"         shift, and enter state 89
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	".."           shift, and enter state 108

	Binop          goto state 86

State 51

	Stat -> "goto" Name .                               (rule 11)

	"break"        reduce using rule 11
	"do"           reduce using rule 11
	"else"         reduce using rule 11
	"elseif"       reduce using rule 11
	"end"          reduce using rule 11
	"for"          reduce using rule 11
	"function"     reduce using rule 11
	"goto"         reduce using rule 11
	"if"           reduce using rule 11
	"local"        reduce using rule 11
	"repeat"       reduce using rule 11
	"return"       reduce using rule 11
	"until"        reduce using rule 11
	"while"        reduce using rule 11
	'('            reduce using rule 11
	"::"           reduce using rule 11
	';'            reduce using rule 11
	Name           reduce using rule 11
	%eof           reduce using rule 11


State 52

	Stat -> "function" Funcname . Funcbody              (rule 19)

	'('            shift, and enter state 85

	Funcbody       goto state 84

State 53

	Funcname -> Name .                                  (rule 36)
	Funcname -> Name . FuncnameDotList ':' Name         (rule 37)
	Funcname -> Name . FuncnameDotList                  (rule 38)

	'('            reduce using rule 36
	'.'            shift, and enter state 83

	FuncnameDotListgoto state 82

State 54

	Stat -> "for" Namelist . "in" Explist "do" Block "end"    (rule 18)

	"in"           shift, and enter state 81


State 55

	Stat -> "for" Name . '=' Exp ',' Exp ',' Exp "do" Block "end"    (rule 16)
	Stat -> "for" Name . '=' Exp ',' Exp "do" Block "end"    (rule 17)
	Namelist -> Name .                                  (rule 46)
	Namelist -> Name . ',' Namelist                     (rule 47)

	"in"           reduce using rule 46
	'='            shift, and enter state 79
	','            shift, and enter state 80


State 56

	Stat -> "do" Block . "end"                          (rule 12)

	"end"          shift, and enter state 78


State 57

	Functioncall -> Prefixexp Args .                    (rule 65)

	"and"          reduce using rule 65
	"break"        reduce using rule 65
	"do"           reduce using rule 65
	"else"         reduce using rule 65
	"elseif"       reduce using rule 65
	"end"          reduce using rule 65
	"for"          reduce using rule 65
	"function"     reduce using rule 65
	"goto"         reduce using rule 65
	"if"           reduce using rule 65
	"local"        reduce using rule 65
	"or"           reduce using rule 65
	"repeat"       reduce using rule 65
	"return"       reduce using rule 65
	"then"         reduce using rule 65
	"until"        reduce using rule 65
	"while"        reduce using rule 65
	'+'            reduce using rule 65
	'-'            reduce using rule 65
	'*'            reduce using rule 65
	'/'            reduce using rule 65
	'%'            reduce using rule 65
	'^'            reduce using rule 65
	'&'            reduce using rule 65
	'~'            reduce using rule 65
	'|'            reduce using rule 65
	"<<"           reduce using rule 65
	">>"           reduce using rule 65
	"//"           reduce using rule 65
	"=="           reduce using rule 65
	"~="           reduce using rule 65
	"<="           reduce using rule 65
	">="           reduce using rule 65
	'<'            reduce using rule 65
	'>'            reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'{'            reduce using rule 65
	'}'            reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	"::"           reduce using rule 65
	';'            reduce using rule 65
	':'            reduce using rule 65
	','            reduce using rule 65
	'.'            reduce using rule 65
	".."           reduce using rule 65
	Name           reduce using rule 65
	LiteralString  reduce using rule 65
	%eof           reduce using rule 65


State 58

	Args -> Tableconstructor .                          (rule 68)

	"and"          reduce using rule 68
	"break"        reduce using rule 68
	"do"           reduce using rule 68
	"else"         reduce using rule 68
	"elseif"       reduce using rule 68
	"end"          reduce using rule 68
	"for"          reduce using rule 68
	"function"     reduce using rule 68
	"goto"         reduce using rule 68
	"if"           reduce using rule 68
	"local"        reduce using rule 68
	"or"           reduce using rule 68
	"repeat"       reduce using rule 68
	"return"       reduce using rule 68
	"then"         reduce using rule 68
	"until"        reduce using rule 68
	"while"        reduce using rule 68
	'+'            reduce using rule 68
	'-'            reduce using rule 68
	'*'            reduce using rule 68
	'/'            reduce using rule 68
	'%'            reduce using rule 68
	'^'            reduce using rule 68
	'&'            reduce using rule 68
	'~'            reduce using rule 68
	'|'            reduce using rule 68
	"<<"           reduce using rule 68
	">>"           reduce using rule 68
	"//"           reduce using rule 68
	"=="           reduce using rule 68
	"~="           reduce using rule 68
	"<="           reduce using rule 68
	">="           reduce using rule 68
	'<'            reduce using rule 68
	'>'            reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	'{'            reduce using rule 68
	'}'            reduce using rule 68
	'['            reduce using rule 68
	']'            reduce using rule 68
	"::"           reduce using rule 68
	';'            reduce using rule 68
	':'            reduce using rule 68
	','            reduce using rule 68
	'.'            reduce using rule 68
	".."           reduce using rule 68
	Name           reduce using rule 68
	LiteralString  reduce using rule 68
	%eof           reduce using rule 68


State 59

	Args -> '(' . Explist ')'                           (rule 67)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Explist        goto state 77
	Exp            goto state 70
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 60

	Var -> Prefixexp '[' . Exp ']'                      (rule 44)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 76
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 61

	Functioncall -> Prefixexp ':' . Name Args           (rule 66)

	Name           shift, and enter state 75


State 62

	Var -> Prefixexp '.' . Name                         (rule 45)

	Name           shift, and enter state 74


State 63

	Args -> LiteralString .                             (rule 69)

	"and"          reduce using rule 69
	"break"        reduce using rule 69
	"do"           reduce using rule 69
	"else"         reduce using rule 69
	"elseif"       reduce using rule 69
	"end"          reduce using rule 69
	"for"          reduce using rule 69
	"function"     reduce using rule 69
	"goto"         reduce using rule 69
	"if"           reduce using rule 69
	"local"        reduce using rule 69
	"or"           reduce using rule 69
	"repeat"       reduce using rule 69
	"return"       reduce using rule 69
	"then"         reduce using rule 69
	"until"        reduce using rule 69
	"while"        reduce using rule 69
	'+'            reduce using rule 69
	'-'            reduce using rule 69
	'*'            reduce using rule 69
	'/'            reduce using rule 69
	'%'            reduce using rule 69
	'^'            reduce using rule 69
	'&'            reduce using rule 69
	'~'            reduce using rule 69
	'|'            reduce using rule 69
	"<<"           reduce using rule 69
	">>"           reduce using rule 69
	"//"           reduce using rule 69
	"=="           reduce using rule 69
	"~="           reduce using rule 69
	"<="           reduce using rule 69
	">="           reduce using rule 69
	'<'            reduce using rule 69
	'>'            reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	'{'            reduce using rule 69
	'}'            reduce using rule 69
	'['            reduce using rule 69
	']'            reduce using rule 69
	"::"           reduce using rule 69
	';'            reduce using rule 69
	':'            reduce using rule 69
	','            reduce using rule 69
	'.'            reduce using rule 69
	".."           reduce using rule 69
	Name           reduce using rule 69
	LiteralString  reduce using rule 69
	%eof           reduce using rule 69


State 64

	Varlist -> Var ',' . Varlist                        (rule 42)

	'('            shift, and enter state 19
	Name           shift, and enter state 22

	Varlist        goto state 73
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 28

State 65

	Stat -> Varlist '=' . Explist                       (rule 7)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Explist        goto state 72
	Exp            goto state 70
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 66

	StatList -> Stat StatList .                         (rule 5)

	"else"         reduce using rule 5
	"elseif"       reduce using rule 5
	"end"          reduce using rule 5
	"return"       reduce using rule 5
	"until"        reduce using rule 5
	%eof           reduce using rule 5


State 67

	Block -> StatList Retstat .                         (rule 2)

	"else"         reduce using rule 2
	"elseif"       reduce using rule 2
	"end"          reduce using rule 2
	"until"        reduce using rule 2
	%eof           reduce using rule 2


State 68

	Retstat -> "return" . Explist ';'                   (rule 31)
	Retstat -> "return" . Explist                       (rule 32)
	Retstat -> "return" . ';'                           (rule 33)
	Retstat -> "return" .                               (rule 34)

	"else"         reduce using rule 34
	"elseif"       reduce using rule 34
	"end"          reduce using rule 34
	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	"until"        reduce using rule 34
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	';'            shift, and enter state 71
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44
	%eof           reduce using rule 34

	Var            goto state 25
	Explist        goto state 69
	Exp            goto state 70
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 69

	Retstat -> "return" Explist . ';'                   (rule 31)
	Retstat -> "return" Explist .                       (rule 32)

	"else"         reduce using rule 32
	"elseif"       reduce using rule 32
	"end"          reduce using rule 32
	"until"        reduce using rule 32
	';'            shift, and enter state 152
	%eof           reduce using rule 32


State 70

	Explist -> Exp .                                    (rule 48)
	Explist -> Exp . ',' Explist                        (rule 49)
	Exp -> Exp . Binop Exp                              (rule 60)

	"and"          shift, and enter state 87
	"break"        reduce using rule 48
	"do"           reduce using rule 48
	"else"         reduce using rule 48
	"elseif"       reduce using rule 48
	"end"          reduce using rule 48
	"for"          reduce using rule 48
	"function"     reduce using rule 48
	"goto"         reduce using rule 48
	"if"           reduce using rule 48
	"local"        reduce using rule 48
	"or"           shift, and enter state 88
	"repeat"       reduce using rule 48
	"return"       reduce using rule 48
	"until"        reduce using rule 48
	"while"        reduce using rule 48
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	'('            reduce using rule 48
	')'            reduce using rule 48
	"::"           reduce using rule 48
	';'            reduce using rule 48
	','            shift, and enter state 151
	".."           shift, and enter state 108
	Name           reduce using rule 48
	%eof           reduce using rule 48

	Binop          goto state 86

State 71

	Retstat -> "return" ';' .                           (rule 33)

	"else"         reduce using rule 33
	"elseif"       reduce using rule 33
	"end"          reduce using rule 33
	"until"        reduce using rule 33
	%eof           reduce using rule 33


State 72

	Stat -> Varlist '=' Explist .                       (rule 7)

	"break"        reduce using rule 7
	"do"           reduce using rule 7
	"else"         reduce using rule 7
	"elseif"       reduce using rule 7
	"end"          reduce using rule 7
	"for"          reduce using rule 7
	"function"     reduce using rule 7
	"goto"         reduce using rule 7
	"if"           reduce using rule 7
	"local"        reduce using rule 7
	"repeat"       reduce using rule 7
	"return"       reduce using rule 7
	"until"        reduce using rule 7
	"while"        reduce using rule 7
	'('            reduce using rule 7
	"::"           reduce using rule 7
	';'            reduce using rule 7
	Name           reduce using rule 7
	%eof           reduce using rule 7


State 73

	Varlist -> Var ',' Varlist .                        (rule 42)

	'='            reduce using rule 42


State 74

	Var -> Prefixexp '.' Name .                         (rule 45)

	"and"          reduce using rule 45
	"break"        reduce using rule 45
	"do"           reduce using rule 45
	"else"         reduce using rule 45
	"elseif"       reduce using rule 45
	"end"          reduce using rule 45
	"for"          reduce using rule 45
	"function"     reduce using rule 45
	"goto"         reduce using rule 45
	"if"           reduce using rule 45
	"local"        reduce using rule 45
	"or"           reduce using rule 45
	"repeat"       reduce using rule 45
	"return"       reduce using rule 45
	"then"         reduce using rule 45
	"until"        reduce using rule 45
	"while"        reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            reduce using rule 45
	'/'            reduce using rule 45
	'%'            reduce using rule 45
	'^'            reduce using rule 45
	'&'            reduce using rule 45
	'~'            reduce using rule 45
	'|'            reduce using rule 45
	"<<"           reduce using rule 45
	">>"           reduce using rule 45
	"//"           reduce using rule 45
	"=="           reduce using rule 45
	"~="           reduce using rule 45
	"<="           reduce using rule 45
	">="           reduce using rule 45
	'<'            reduce using rule 45
	'>'            reduce using rule 45
	'='            reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	"::"           reduce using rule 45
	';'            reduce using rule 45
	':'            reduce using rule 45
	','            reduce using rule 45
	'.'            reduce using rule 45
	".."           reduce using rule 45
	Name           reduce using rule 45
	LiteralString  reduce using rule 45
	%eof           reduce using rule 45


State 75

	Functioncall -> Prefixexp ':' Name . Args           (rule 66)

	'('            shift, and enter state 59
	'{'            shift, and enter state 40
	LiteralString  shift, and enter state 63

	Args           goto state 150
	Tableconstructorgoto state 58

State 76

	Var -> Prefixexp '[' Exp . ']'                      (rule 44)
	Exp -> Exp . Binop Exp                              (rule 60)

	"and"          shift, and enter state 87
	"or"           shift, and enter state 88
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	']'            shift, and enter state 149
	".."           shift, and enter state 108

	Binop          goto state 86

State 77

	Args -> '(' Explist . ')'                           (rule 67)

	')'            shift, and enter state 148


State 78

	Stat -> "do" Block "end" .                          (rule 12)

	"break"        reduce using rule 12
	"do"           reduce using rule 12
	"else"         reduce using rule 12
	"elseif"       reduce using rule 12
	"end"          reduce using rule 12
	"for"          reduce using rule 12
	"function"     reduce using rule 12
	"goto"         reduce using rule 12
	"if"           reduce using rule 12
	"local"        reduce using rule 12
	"repeat"       reduce using rule 12
	"return"       reduce using rule 12
	"until"        reduce using rule 12
	"while"        reduce using rule 12
	'('            reduce using rule 12
	"::"           reduce using rule 12
	';'            reduce using rule 12
	Name           reduce using rule 12
	%eof           reduce using rule 12


State 79

	Stat -> "for" Name '=' . Exp ',' Exp ',' Exp "do" Block "end"    (rule 16)
	Stat -> "for" Name '=' . Exp ',' Exp "do" Block "end"    (rule 17)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 147
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 80

	Namelist -> Name ',' . Namelist                     (rule 47)

	Name           shift, and enter state 141

	Namelist       goto state 146

State 81

	Stat -> "for" Namelist "in" . Explist "do" Block "end"    (rule 18)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Explist        goto state 145
	Exp            goto state 70
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 82

	Funcname -> Name FuncnameDotList . ':' Name         (rule 37)
	Funcname -> Name FuncnameDotList .                  (rule 38)
	FuncnameDotList -> FuncnameDotList . '.' Name       (rule 40)

	'('            reduce using rule 38
	':'            shift, and enter state 143
	'.'            shift, and enter state 144


State 83

	FuncnameDotList -> '.' . Name                       (rule 39)

	Name           shift, and enter state 142


State 84

	Stat -> "function" Funcname Funcbody .              (rule 19)

	"break"        reduce using rule 19
	"do"           reduce using rule 19
	"else"         reduce using rule 19
	"elseif"       reduce using rule 19
	"end"          reduce using rule 19
	"for"          reduce using rule 19
	"function"     reduce using rule 19
	"goto"         reduce using rule 19
	"if"           reduce using rule 19
	"local"        reduce using rule 19
	"repeat"       reduce using rule 19
	"return"       reduce using rule 19
	"until"        reduce using rule 19
	"while"        reduce using rule 19
	'('            reduce using rule 19
	"::"           reduce using rule 19
	';'            reduce using rule 19
	Name           reduce using rule 19
	%eof           reduce using rule 19


State 85

	Funcbody -> '(' . Parlist ')' Block "end"           (rule 71)

	"..."          shift, and enter state 140
	Name           shift, and enter state 141

	Namelist       goto state 138
	Parlist        goto state 139

State 86

	Exp -> Exp Binop . Exp                              (rule 60)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 137
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 87

	Binop -> "and" .                                    (rule 102)

	"false"        reduce using rule 102
	"function"     reduce using rule 102
	"nil"          reduce using rule 102
	"not"          reduce using rule 102
	"true"         reduce using rule 102
	'-'            reduce using rule 102
	'#'            reduce using rule 102
	'~'            reduce using rule 102
	'('            reduce using rule 102
	'{'            reduce using rule 102
	"..."          reduce using rule 102
	Integer        reduce using rule 102
	Float          reduce using rule 102
	Name           reduce using rule 102
	LiteralString  reduce using rule 102


State 88

	Binop -> "or" .                                     (rule 103)

	"false"        reduce using rule 103
	"function"     reduce using rule 103
	"nil"          reduce using rule 103
	"not"          reduce using rule 103
	"true"         reduce using rule 103
	'-'            reduce using rule 103
	'#'            reduce using rule 103
	'~'            reduce using rule 103
	'('            reduce using rule 103
	'{'            reduce using rule 103
	"..."          reduce using rule 103
	Integer        reduce using rule 103
	Float          reduce using rule 103
	Name           reduce using rule 103
	LiteralString  reduce using rule 103


State 89

	Stat -> "if" Exp "then" . Block ElseIfList ElseBlock "end"    (rule 15)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22

	Block          goto state 136
	StatList       goto state 3
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 90

	Binop -> '+' .                                      (rule 83)

	"false"        reduce using rule 83
	"function"     reduce using rule 83
	"nil"          reduce using rule 83
	"not"          reduce using rule 83
	"true"         reduce using rule 83
	'-'            reduce using rule 83
	'#'            reduce using rule 83
	'~'            reduce using rule 83
	'('            reduce using rule 83
	'{'            reduce using rule 83
	"..."          reduce using rule 83
	Integer        reduce using rule 83
	Float          reduce using rule 83
	Name           reduce using rule 83
	LiteralString  reduce using rule 83


State 91

	Binop -> '-' .                                      (rule 84)

	"false"        reduce using rule 84
	"function"     reduce using rule 84
	"nil"          reduce using rule 84
	"not"          reduce using rule 84
	"true"         reduce using rule 84
	'-'            reduce using rule 84
	'#'            reduce using rule 84
	'~'            reduce using rule 84
	'('            reduce using rule 84
	'{'            reduce using rule 84
	"..."          reduce using rule 84
	Integer        reduce using rule 84
	Float          reduce using rule 84
	Name           reduce using rule 84
	LiteralString  reduce using rule 84


State 92

	Binop -> '*' .                                      (rule 85)

	"false"        reduce using rule 85
	"function"     reduce using rule 85
	"nil"          reduce using rule 85
	"not"          reduce using rule 85
	"true"         reduce using rule 85
	'-'            reduce using rule 85
	'#'            reduce using rule 85
	'~'            reduce using rule 85
	'('            reduce using rule 85
	'{'            reduce using rule 85
	"..."          reduce using rule 85
	Integer        reduce using rule 85
	Float          reduce using rule 85
	Name           reduce using rule 85
	LiteralString  reduce using rule 85


State 93

	Binop -> '/' .                                      (rule 86)

	"false"        reduce using rule 86
	"function"     reduce using rule 86
	"nil"          reduce using rule 86
	"not"          reduce using rule 86
	"true"         reduce using rule 86
	'-'            reduce using rule 86
	'#'            reduce using rule 86
	'~'            reduce using rule 86
	'('            reduce using rule 86
	'{'            reduce using rule 86
	"..."          reduce using rule 86
	Integer        reduce using rule 86
	Float          reduce using rule 86
	Name           reduce using rule 86
	LiteralString  reduce using rule 86


State 94

	Binop -> '%' .                                      (rule 89)

	"false"        reduce using rule 89
	"function"     reduce using rule 89
	"nil"          reduce using rule 89
	"not"          reduce using rule 89
	"true"         reduce using rule 89
	'-'            reduce using rule 89
	'#'            reduce using rule 89
	'~'            reduce using rule 89
	'('            reduce using rule 89
	'{'            reduce using rule 89
	"..."          reduce using rule 89
	Integer        reduce using rule 89
	Float          reduce using rule 89
	Name           reduce using rule 89
	LiteralString  reduce using rule 89


State 95

	Binop -> '^' .                                      (rule 88)

	"false"        reduce using rule 88
	"function"     reduce using rule 88
	"nil"          reduce using rule 88
	"not"          reduce using rule 88
	"true"         reduce using rule 88
	'-'            reduce using rule 88
	'#'            reduce using rule 88
	'~'            reduce using rule 88
	'('            reduce using rule 88
	'{'            reduce using rule 88
	"..."          reduce using rule 88
	Integer        reduce using rule 88
	Float          reduce using rule 88
	Name           reduce using rule 88
	LiteralString  reduce using rule 88


State 96

	Binop -> '&' .                                      (rule 90)

	"false"        reduce using rule 90
	"function"     reduce using rule 90
	"nil"          reduce using rule 90
	"not"          reduce using rule 90
	"true"         reduce using rule 90
	'-'            reduce using rule 90
	'#'            reduce using rule 90
	'~'            reduce using rule 90
	'('            reduce using rule 90
	'{'            reduce using rule 90
	"..."          reduce using rule 90
	Integer        reduce using rule 90
	Float          reduce using rule 90
	Name           reduce using rule 90
	LiteralString  reduce using rule 90


State 97

	Binop -> '~' .                                      (rule 91)

	"false"        reduce using rule 91
	"function"     reduce using rule 91
	"nil"          reduce using rule 91
	"not"          reduce using rule 91
	"true"         reduce using rule 91
	'-'            reduce using rule 91
	'#'            reduce using rule 91
	'~'            reduce using rule 91
	'('            reduce using rule 91
	'{'            reduce using rule 91
	"..."          reduce using rule 91
	Integer        reduce using rule 91
	Float          reduce using rule 91
	Name           reduce using rule 91
	LiteralString  reduce using rule 91


State 98

	Binop -> '|' .                                      (rule 92)

	"false"        reduce using rule 92
	"function"     reduce using rule 92
	"nil"          reduce using rule 92
	"not"          reduce using rule 92
	"true"         reduce using rule 92
	'-'            reduce using rule 92
	'#'            reduce using rule 92
	'~'            reduce using rule 92
	'('            reduce using rule 92
	'{'            reduce using rule 92
	"..."          reduce using rule 92
	Integer        reduce using rule 92
	Float          reduce using rule 92
	Name           reduce using rule 92
	LiteralString  reduce using rule 92


State 99

	Binop -> "<<" .                                     (rule 94)

	"false"        reduce using rule 94
	"function"     reduce using rule 94
	"nil"          reduce using rule 94
	"not"          reduce using rule 94
	"true"         reduce using rule 94
	'-'            reduce using rule 94
	'#'            reduce using rule 94
	'~'            reduce using rule 94
	'('            reduce using rule 94
	'{'            reduce using rule 94
	"..."          reduce using rule 94
	Integer        reduce using rule 94
	Float          reduce using rule 94
	Name           reduce using rule 94
	LiteralString  reduce using rule 94


State 100

	Binop -> ">>" .                                     (rule 93)

	"false"        reduce using rule 93
	"function"     reduce using rule 93
	"nil"          reduce using rule 93
	"not"          reduce using rule 93
	"true"         reduce using rule 93
	'-'            reduce using rule 93
	'#'            reduce using rule 93
	'~'            reduce using rule 93
	'('            reduce using rule 93
	'{'            reduce using rule 93
	"..."          reduce using rule 93
	Integer        reduce using rule 93
	Float          reduce using rule 93
	Name           reduce using rule 93
	LiteralString  reduce using rule 93


State 101

	Binop -> "//" .                                     (rule 87)

	"false"        reduce using rule 87
	"function"     reduce using rule 87
	"nil"          reduce using rule 87
	"not"          reduce using rule 87
	"true"         reduce using rule 87
	'-'            reduce using rule 87
	'#'            reduce using rule 87
	'~'            reduce using rule 87
	'('            reduce using rule 87
	'{'            reduce using rule 87
	"..."          reduce using rule 87
	Integer        reduce using rule 87
	Float          reduce using rule 87
	Name           reduce using rule 87
	LiteralString  reduce using rule 87


State 102

	Binop -> "==" .                                     (rule 100)

	"false"        reduce using rule 100
	"function"     reduce using rule 100
	"nil"          reduce using rule 100
	"not"          reduce using rule 100
	"true"         reduce using rule 100
	'-'            reduce using rule 100
	'#'            reduce using rule 100
	'~'            reduce using rule 100
	'('            reduce using rule 100
	'{'            reduce using rule 100
	"..."          reduce using rule 100
	Integer        reduce using rule 100
	Float          reduce using rule 100
	Name           reduce using rule 100
	LiteralString  reduce using rule 100


State 103

	Binop -> "~=" .                                     (rule 101)

	"false"        reduce using rule 101
	"function"     reduce using rule 101
	"nil"          reduce using rule 101
	"not"          reduce using rule 101
	"true"         reduce using rule 101
	'-'            reduce using rule 101
	'#'            reduce using rule 101
	'~'            reduce using rule 101
	'('            reduce using rule 101
	'{'            reduce using rule 101
	"..."          reduce using rule 101
	Integer        reduce using rule 101
	Float          reduce using rule 101
	Name           reduce using rule 101
	LiteralString  reduce using rule 101


State 104

	Binop -> "<=" .                                     (rule 97)

	"false"        reduce using rule 97
	"function"     reduce using rule 97
	"nil"          reduce using rule 97
	"not"          reduce using rule 97
	"true"         reduce using rule 97
	'-'            reduce using rule 97
	'#'            reduce using rule 97
	'~'            reduce using rule 97
	'('            reduce using rule 97
	'{'            reduce using rule 97
	"..."          reduce using rule 97
	Integer        reduce using rule 97
	Float          reduce using rule 97
	Name           reduce using rule 97
	LiteralString  reduce using rule 97


State 105

	Binop -> ">=" .                                     (rule 99)

	"false"        reduce using rule 99
	"function"     reduce using rule 99
	"nil"          reduce using rule 99
	"not"          reduce using rule 99
	"true"         reduce using rule 99
	'-'            reduce using rule 99
	'#'            reduce using rule 99
	'~'            reduce using rule 99
	'('            reduce using rule 99
	'{'            reduce using rule 99
	"..."          reduce using rule 99
	Integer        reduce using rule 99
	Float          reduce using rule 99
	Name           reduce using rule 99
	LiteralString  reduce using rule 99


State 106

	Binop -> '<' .                                      (rule 96)

	"false"        reduce using rule 96
	"function"     reduce using rule 96
	"nil"          reduce using rule 96
	"not"          reduce using rule 96
	"true"         reduce using rule 96
	'-'            reduce using rule 96
	'#'            reduce using rule 96
	'~'            reduce using rule 96
	'('            reduce using rule 96
	'{'            reduce using rule 96
	"..."          reduce using rule 96
	Integer        reduce using rule 96
	Float          reduce using rule 96
	Name           reduce using rule 96
	LiteralString  reduce using rule 96


State 107

	Binop -> '>' .                                      (rule 98)

	"false"        reduce using rule 98
	"function"     reduce using rule 98
	"nil"          reduce using rule 98
	"not"          reduce using rule 98
	"true"         reduce using rule 98
	'-'            reduce using rule 98
	'#'            reduce using rule 98
	'~'            reduce using rule 98
	'('            reduce using rule 98
	'{'            reduce using rule 98
	"..."          reduce using rule 98
	Integer        reduce using rule 98
	Float          reduce using rule 98
	Name           reduce using rule 98
	LiteralString  reduce using rule 98


State 108

	Binop -> ".." .                                     (rule 95)

	"false"        reduce using rule 95
	"function"     reduce using rule 95
	"nil"          reduce using rule 95
	"not"          reduce using rule 95
	"true"         reduce using rule 95
	'-'            reduce using rule 95
	'#'            reduce using rule 95
	'~'            reduce using rule 95
	'('            reduce using rule 95
	'{'            reduce using rule 95
	"..."          reduce using rule 95
	Integer        reduce using rule 95
	Float          reduce using rule 95
	Name           reduce using rule 95
	LiteralString  reduce using rule 95


State 109

	Attnamelist -> Name Attrib .                        (rule 27)
	Attnamelist -> Name Attrib . ',' Attnamelist        (rule 28)

	"break"        reduce using rule 27
	"do"           reduce using rule 27
	"else"         reduce using rule 27
	"elseif"       reduce using rule 27
	"end"          reduce using rule 27
	"for"          reduce using rule 27
	"function"     reduce using rule 27
	"goto"         reduce using rule 27
	"if"           reduce using rule 27
	"local"        reduce using rule 27
	"repeat"       reduce using rule 27
	"return"       reduce using rule 27
	"until"        reduce using rule 27
	"while"        reduce using rule 27
	'='            reduce using rule 27
	'('            reduce using rule 27
	"::"           reduce using rule 27
	';'            reduce using rule 27
	','            shift, and enter state 135
	Name           reduce using rule 27
	%eof           reduce using rule 27


State 110

	Attrib -> '<' . Name '>'                            (rule 29)

	Name           shift, and enter state 134


State 111

	Stat -> "local" "function" Name . Funcbody          (rule 20)

	'('            shift, and enter state 85

	Funcbody       goto state 133

State 112

	Stat -> "local" Attnamelist '=' . Explist           (rule 21)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Explist        goto state 132
	Exp            goto state 70
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 113

	Stat -> "repeat" Block "until" . Exp                (rule 14)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 131
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 114

	Stat -> "while" Exp "do" . Block "end"              (rule 13)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22

	Block          goto state 130
	StatList       goto state 3
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 115

	Exp -> Exp . Binop Exp                              (rule 60)
	Field -> Exp .                                      (rule 80)

	"and"          shift, and enter state 87
	"or"           shift, and enter state 88
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	'}'            reduce using rule 80
	';'            reduce using rule 80
	','            reduce using rule 80
	".."           shift, and enter state 108

	Binop          goto state 86

State 116

	Tableconstructor -> '{' Fieldlist . '}'             (rule 74)

	'}'            shift, and enter state 129


State 117

	Fieldlist -> Field .                                (rule 75)
	Fieldlist -> Field . Fieldsep Fieldlist             (rule 76)
	Fieldlist -> Field . Fieldsep                       (rule 77)

	'}'            reduce using rule 75
	';'            shift, and enter state 127
	','            shift, and enter state 128

	Fieldsep       goto state 126

State 118

	Field -> '[' . Exp ']' '=' Exp                      (rule 78)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 125
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 119

	Var -> Name .                                       (rule 43)
	Field -> Name . '=' Exp                             (rule 79)

	"and"          reduce using rule 43
	"or"           reduce using rule 43
	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	'%'            reduce using rule 43
	'^'            reduce using rule 43
	'&'            reduce using rule 43
	'~'            reduce using rule 43
	'|'            reduce using rule 43
	"<<"           reduce using rule 43
	">>"           reduce using rule 43
	"//"           reduce using rule 43
	"=="           reduce using rule 43
	"~="           reduce using rule 43
	"<="           reduce using rule 43
	">="           reduce using rule 43
	'<'            reduce using rule 43
	'>'            reduce using rule 43
	'='            shift, and enter state 124
	'('            reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	'['            reduce using rule 43
	';'            reduce using rule 43
	':'            reduce using rule 43
	','            reduce using rule 43
	'.'            reduce using rule 43
	".."           reduce using rule 43
	LiteralString  reduce using rule 43


State 120

	Functiondef -> "function" Funcbody .                (rule 70)

	"and"          reduce using rule 70
	"break"        reduce using rule 70
	"do"           reduce using rule 70
	"else"         reduce using rule 70
	"elseif"       reduce using rule 70
	"end"          reduce using rule 70
	"for"          reduce using rule 70
	"function"     reduce using rule 70
	"goto"         reduce using rule 70
	"if"           reduce using rule 70
	"local"        reduce using rule 70
	"or"           reduce using rule 70
	"repeat"       reduce using rule 70
	"return"       reduce using rule 70
	"then"         reduce using rule 70
	"until"        reduce using rule 70
	"while"        reduce using rule 70
	'+'            reduce using rule 70
	'-'            reduce using rule 70
	'*'            reduce using rule 70
	'/'            reduce using rule 70
	'%'            reduce using rule 70
	'^'            reduce using rule 70
	'&'            reduce using rule 70
	'~'            reduce using rule 70
	'|'            reduce using rule 70
	"<<"           reduce using rule 70
	">>"           reduce using rule 70
	"//"           reduce using rule 70
	"=="           reduce using rule 70
	"~="           reduce using rule 70
	"<="           reduce using rule 70
	">="           reduce using rule 70
	'<'            reduce using rule 70
	'>'            reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	'}'            reduce using rule 70
	']'            reduce using rule 70
	"::"           reduce using rule 70
	';'            reduce using rule 70
	','            reduce using rule 70
	".."           reduce using rule 70
	Name           reduce using rule 70
	%eof           reduce using rule 70


State 121

	Exp -> Exp . Binop Exp                              (rule 60)
	Exp -> Unop Exp .                                   (rule 61)

	"and"          shift, and enter state 87
			(reduce using rule 61)

	"break"        reduce using rule 61
	"do"           reduce using rule 61
	"else"         reduce using rule 61
	"elseif"       reduce using rule 61
	"end"          reduce using rule 61
	"for"          reduce using rule 61
	"function"     reduce using rule 61
	"goto"         reduce using rule 61
	"if"           reduce using rule 61
	"local"        reduce using rule 61
	"or"           shift, and enter state 88
			(reduce using rule 61)

	"repeat"       reduce using rule 61
	"return"       reduce using rule 61
	"then"         reduce using rule 61
	"until"        reduce using rule 61
	"while"        reduce using rule 61
	'+'            shift, and enter state 90
			(reduce using rule 61)

	'-'            shift, and enter state 91
			(reduce using rule 61)

	'*'            shift, and enter state 92
			(reduce using rule 61)

	'/'            shift, and enter state 93
			(reduce using rule 61)

	'%'            shift, and enter state 94
			(reduce using rule 61)

	'^'            shift, and enter state 95
			(reduce using rule 61)

	'&'            shift, and enter state 96
			(reduce using rule 61)

	'~'            shift, and enter state 97
			(reduce using rule 61)

	'|'            shift, and enter state 98
			(reduce using rule 61)

	"<<"           shift, and enter state 99
			(reduce using rule 61)

	">>"           shift, and enter state 100
			(reduce using rule 61)

	"//"           shift, and enter state 101
			(reduce using rule 61)

	"=="           shift, and enter state 102
			(reduce using rule 61)

	"~="           shift, and enter state 103
			(reduce using rule 61)

	"<="           shift, and enter state 104
			(reduce using rule 61)

	">="           shift, and enter state 105
			(reduce using rule 61)

	'<'            shift, and enter state 106
			(reduce using rule 61)

	'>'            shift, and enter state 107
			(reduce using rule 61)

	'('            reduce using rule 61
	')'            reduce using rule 61
	'}'            reduce using rule 61
	']'            reduce using rule 61
	"::"           reduce using rule 61
	';'            reduce using rule 61
	','            reduce using rule 61
	".."           shift, and enter state 108
			(reduce using rule 61)

	Name           reduce using rule 61
	%eof           reduce using rule 61

	Binop          goto state 86

State 122

	Prefixexp -> '(' Exp ')' .                          (rule 64)

	"and"          reduce using rule 64
	"break"        reduce using rule 64
	"do"           reduce using rule 64
	"else"         reduce using rule 64
	"elseif"       reduce using rule 64
	"end"          reduce using rule 64
	"for"          reduce using rule 64
	"function"     reduce using rule 64
	"goto"         reduce using rule 64
	"if"           reduce using rule 64
	"local"        reduce using rule 64
	"or"           reduce using rule 64
	"repeat"       reduce using rule 64
	"return"       reduce using rule 64
	"then"         reduce using rule 64
	"until"        reduce using rule 64
	"while"        reduce using rule 64
	'+'            reduce using rule 64
	'-'            reduce using rule 64
	'*'            reduce using rule 64
	'/'            reduce using rule 64
	'%'            reduce using rule 64
	'^'            reduce using rule 64
	'&'            reduce using rule 64
	'~'            reduce using rule 64
	'|'            reduce using rule 64
	"<<"           reduce using rule 64
	">>"           reduce using rule 64
	"//"           reduce using rule 64
	"=="           reduce using rule 64
	"~="           reduce using rule 64
	"<="           reduce using rule 64
	">="           reduce using rule 64
	'<'            reduce using rule 64
	'>'            reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'{'            reduce using rule 64
	'}'            reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	"::"           reduce using rule 64
	';'            reduce using rule 64
	':'            reduce using rule 64
	','            reduce using rule 64
	'.'            reduce using rule 64
	".."           reduce using rule 64
	Name           reduce using rule 64
	LiteralString  reduce using rule 64
	%eof           reduce using rule 64


State 123

	Label -> "::" Name "::" .                           (rule 35)

	"break"        reduce using rule 35
	"do"           reduce using rule 35
	"else"         reduce using rule 35
	"elseif"       reduce using rule 35
	"end"          reduce using rule 35
	"for"          reduce using rule 35
	"function"     reduce using rule 35
	"goto"         reduce using rule 35
	"if"           reduce using rule 35
	"local"        reduce using rule 35
	"repeat"       reduce using rule 35
	"return"       reduce using rule 35
	"until"        reduce using rule 35
	"while"        reduce using rule 35
	'('            reduce using rule 35
	"::"           reduce using rule 35
	';'            reduce using rule 35
	Name           reduce using rule 35
	%eof           reduce using rule 35


State 124

	Field -> Name '=' . Exp                             (rule 79)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 167
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 125

	Exp -> Exp . Binop Exp                              (rule 60)
	Field -> '[' Exp . ']' '=' Exp                      (rule 78)

	"and"          shift, and enter state 87
	"or"           shift, and enter state 88
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	']'            shift, and enter state 166
	".."           shift, and enter state 108

	Binop          goto state 86

State 126

	Fieldlist -> Field Fieldsep . Fieldlist             (rule 76)
	Fieldlist -> Field Fieldsep .                       (rule 77)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	'}'            reduce using rule 77
	'['            shift, and enter state 118
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 119
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 115
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Fieldlist      goto state 165
	Field          goto state 117
	Unop           goto state 31

State 127

	Fieldsep -> ';' .                                   (rule 82)

	"false"        reduce using rule 82
	"function"     reduce using rule 82
	"nil"          reduce using rule 82
	"not"          reduce using rule 82
	"true"         reduce using rule 82
	'-'            reduce using rule 82
	'#'            reduce using rule 82
	'~'            reduce using rule 82
	'('            reduce using rule 82
	'{'            reduce using rule 82
	'}'            reduce using rule 82
	'['            reduce using rule 82
	"..."          reduce using rule 82
	Integer        reduce using rule 82
	Float          reduce using rule 82
	Name           reduce using rule 82
	LiteralString  reduce using rule 82


State 128

	Fieldsep -> ',' .                                   (rule 81)

	"false"        reduce using rule 81
	"function"     reduce using rule 81
	"nil"          reduce using rule 81
	"not"          reduce using rule 81
	"true"         reduce using rule 81
	'-'            reduce using rule 81
	'#'            reduce using rule 81
	'~'            reduce using rule 81
	'('            reduce using rule 81
	'{'            reduce using rule 81
	'}'            reduce using rule 81
	'['            reduce using rule 81
	"..."          reduce using rule 81
	Integer        reduce using rule 81
	Float          reduce using rule 81
	Name           reduce using rule 81
	LiteralString  reduce using rule 81


State 129

	Tableconstructor -> '{' Fieldlist '}' .             (rule 74)

	"and"          reduce using rule 74
	"break"        reduce using rule 74
	"do"           reduce using rule 74
	"else"         reduce using rule 74
	"elseif"       reduce using rule 74
	"end"          reduce using rule 74
	"for"          reduce using rule 74
	"function"     reduce using rule 74
	"goto"         reduce using rule 74
	"if"           reduce using rule 74
	"local"        reduce using rule 74
	"or"           reduce using rule 74
	"repeat"       reduce using rule 74
	"return"       reduce using rule 74
	"then"         reduce using rule 74
	"until"        reduce using rule 74
	"while"        reduce using rule 74
	'+'            reduce using rule 74
	'-'            reduce using rule 74
	'*'            reduce using rule 74
	'/'            reduce using rule 74
	'%'            reduce using rule 74
	'^'            reduce using rule 74
	'&'            reduce using rule 74
	'~'            reduce using rule 74
	'|'            reduce using rule 74
	"<<"           reduce using rule 74
	">>"           reduce using rule 74
	"//"           reduce using rule 74
	"=="           reduce using rule 74
	"~="           reduce using rule 74
	"<="           reduce using rule 74
	">="           reduce using rule 74
	'<'            reduce using rule 74
	'>'            reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	'{'            reduce using rule 74
	'}'            reduce using rule 74
	'['            reduce using rule 74
	']'            reduce using rule 74
	"::"           reduce using rule 74
	';'            reduce using rule 74
	':'            reduce using rule 74
	','            reduce using rule 74
	'.'            reduce using rule 74
	".."           reduce using rule 74
	Name           reduce using rule 74
	LiteralString  reduce using rule 74
	%eof           reduce using rule 74


State 130

	Stat -> "while" Exp "do" Block . "end"              (rule 13)

	"end"          shift, and enter state 164


State 131

	Stat -> "repeat" Block "until" Exp .                (rule 14)
	Exp -> Exp . Binop Exp                              (rule 60)

	"and"          shift, and enter state 87
	"break"        reduce using rule 14
	"do"           reduce using rule 14
	"else"         reduce using rule 14
	"elseif"       reduce using rule 14
	"end"          reduce using rule 14
	"for"          reduce using rule 14
	"function"     reduce using rule 14
	"goto"         reduce using rule 14
	"if"           reduce using rule 14
	"local"        reduce using rule 14
	"or"           shift, and enter state 88
	"repeat"       reduce using rule 14
	"return"       reduce using rule 14
	"until"        reduce using rule 14
	"while"        reduce using rule 14
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	'('            reduce using rule 14
	"::"           reduce using rule 14
	';'            reduce using rule 14
	".."           shift, and enter state 108
	Name           reduce using rule 14
	%eof           reduce using rule 14

	Binop          goto state 86

State 132

	Stat -> "local" Attnamelist '=' Explist .           (rule 21)

	"break"        reduce using rule 21
	"do"           reduce using rule 21
	"else"         reduce using rule 21
	"elseif"       reduce using rule 21
	"end"          reduce using rule 21
	"for"          reduce using rule 21
	"function"     reduce using rule 21
	"goto"         reduce using rule 21
	"if"           reduce using rule 21
	"local"        reduce using rule 21
	"repeat"       reduce using rule 21
	"return"       reduce using rule 21
	"until"        reduce using rule 21
	"while"        reduce using rule 21
	'('            reduce using rule 21
	"::"           reduce using rule 21
	';'            reduce using rule 21
	Name           reduce using rule 21
	%eof           reduce using rule 21


State 133

	Stat -> "local" "function" Name Funcbody .          (rule 20)

	"break"        reduce using rule 20
	"do"           reduce using rule 20
	"else"         reduce using rule 20
	"elseif"       reduce using rule 20
	"end"          reduce using rule 20
	"for"          reduce using rule 20
	"function"     reduce using rule 20
	"goto"         reduce using rule 20
	"if"           reduce using rule 20
	"local"        reduce using rule 20
	"repeat"       reduce using rule 20
	"return"       reduce using rule 20
	"until"        reduce using rule 20
	"while"        reduce using rule 20
	'('            reduce using rule 20
	"::"           reduce using rule 20
	';'            reduce using rule 20
	Name           reduce using rule 20
	%eof           reduce using rule 20


State 134

	Attrib -> '<' Name . '>'                            (rule 29)

	'>'            shift, and enter state 163


State 135

	Attnamelist -> Name Attrib ',' . Attnamelist        (rule 28)

	Name           shift, and enter state 49

	Attnamelist    goto state 162

State 136

	Stat -> "if" Exp "then" Block . ElseIfList ElseBlock "end"    (rule 15)

	"else"         reduce using rule 23
	"elseif"       shift, and enter state 161
	"end"          reduce using rule 23

	ElseIfList     goto state 160

State 137

	Exp -> Exp . Binop Exp                              (rule 60)
	Exp -> Exp Binop Exp .                              (rule 60)

	"and"          shift, and enter state 87
			(reduce using rule 60)

	"break"        reduce using rule 60
	"do"           reduce using rule 60
	"else"         reduce using rule 60
	"elseif"       reduce using rule 60
	"end"          reduce using rule 60
	"for"          reduce using rule 60
	"function"     reduce using rule 60
	"goto"         reduce using rule 60
	"if"           reduce using rule 60
	"local"        reduce using rule 60
	"or"           shift, and enter state 88
			(reduce using rule 60)

	"repeat"       reduce using rule 60
	"return"       reduce using rule 60
	"then"         reduce using rule 60
	"until"        reduce using rule 60
	"while"        reduce using rule 60
	'+'            shift, and enter state 90
			(reduce using rule 60)

	'-'            shift, and enter state 91
			(reduce using rule 60)

	'*'            shift, and enter state 92
			(reduce using rule 60)

	'/'            shift, and enter state 93
			(reduce using rule 60)

	'%'            shift, and enter state 94
			(reduce using rule 60)

	'^'            shift, and enter state 95
			(reduce using rule 60)

	'&'            shift, and enter state 96
			(reduce using rule 60)

	'~'            shift, and enter state 97
			(reduce using rule 60)

	'|'            shift, and enter state 98
			(reduce using rule 60)

	"<<"           shift, and enter state 99
			(reduce using rule 60)

	">>"           shift, and enter state 100
			(reduce using rule 60)

	"//"           shift, and enter state 101
			(reduce using rule 60)

	"=="           shift, and enter state 102
			(reduce using rule 60)

	"~="           shift, and enter state 103
			(reduce using rule 60)

	"<="           shift, and enter state 104
			(reduce using rule 60)

	">="           shift, and enter state 105
			(reduce using rule 60)

	'<'            shift, and enter state 106
			(reduce using rule 60)

	'>'            shift, and enter state 107
			(reduce using rule 60)

	'('            reduce using rule 60
	')'            reduce using rule 60
	'}'            reduce using rule 60
	']'            reduce using rule 60
	"::"           reduce using rule 60
	';'            reduce using rule 60
	','            reduce using rule 60
	".."           shift, and enter state 108
			(reduce using rule 60)

	Name           reduce using rule 60
	%eof           reduce using rule 60

	Binop          goto state 86

State 138

	Parlist -> Namelist . ',' "..."                     (rule 72)

	','            shift, and enter state 159


State 139

	Funcbody -> '(' Parlist . ')' Block "end"           (rule 71)

	')'            shift, and enter state 158


State 140

	Parlist -> "..." .                                  (rule 73)

	')'            reduce using rule 73


State 141

	Namelist -> Name .                                  (rule 46)
	Namelist -> Name . ',' Namelist                     (rule 47)

	"in"           reduce using rule 46
	','            shift, and enter state 80
			(reduce using rule 46)



State 142

	FuncnameDotList -> '.' Name .                       (rule 39)

	'('            reduce using rule 39
	':'            reduce using rule 39
	'.'            reduce using rule 39


State 143

	Funcname -> Name FuncnameDotList ':' . Name         (rule 37)

	Name           shift, and enter state 157


State 144

	FuncnameDotList -> FuncnameDotList '.' . Name       (rule 40)

	Name           shift, and enter state 156


State 145

	Stat -> "for" Namelist "in" Explist . "do" Block "end"    (rule 18)

	"do"           shift, and enter state 155


State 146

	Namelist -> Name ',' Namelist .                     (rule 47)

	"in"           reduce using rule 47
	','            reduce using rule 47


State 147

	Stat -> "for" Name '=' Exp . ',' Exp ',' Exp "do" Block "end"    (rule 16)
	Stat -> "for" Name '=' Exp . ',' Exp "do" Block "end"    (rule 17)
	Exp -> Exp . Binop Exp                              (rule 60)

	"and"          shift, and enter state 87
	"or"           shift, and enter state 88
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	','            shift, and enter state 154
	".."           shift, and enter state 108

	Binop          goto state 86

State 148

	Args -> '(' Explist ')' .                           (rule 67)

	"and"          reduce using rule 67
	"break"        reduce using rule 67
	"do"           reduce using rule 67
	"else"         reduce using rule 67
	"elseif"       reduce using rule 67
	"end"          reduce using rule 67
	"for"          reduce using rule 67
	"function"     reduce using rule 67
	"goto"         reduce using rule 67
	"if"           reduce using rule 67
	"local"        reduce using rule 67
	"or"           reduce using rule 67
	"repeat"       reduce using rule 67
	"return"       reduce using rule 67
	"then"         reduce using rule 67
	"until"        reduce using rule 67
	"while"        reduce using rule 67
	'+'            reduce using rule 67
	'-'            reduce using rule 67
	'*'            reduce using rule 67
	'/'            reduce using rule 67
	'%'            reduce using rule 67
	'^'            reduce using rule 67
	'&'            reduce using rule 67
	'~'            reduce using rule 67
	'|'            reduce using rule 67
	"<<"           reduce using rule 67
	">>"           reduce using rule 67
	"//"           reduce using rule 67
	"=="           reduce using rule 67
	"~="           reduce using rule 67
	"<="           reduce using rule 67
	">="           reduce using rule 67
	'<'            reduce using rule 67
	'>'            reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	'{'            reduce using rule 67
	'}'            reduce using rule 67
	'['            reduce using rule 67
	']'            reduce using rule 67
	"::"           reduce using rule 67
	';'            reduce using rule 67
	':'            reduce using rule 67
	','            reduce using rule 67
	'.'            reduce using rule 67
	".."           reduce using rule 67
	Name           reduce using rule 67
	LiteralString  reduce using rule 67
	%eof           reduce using rule 67


State 149

	Var -> Prefixexp '[' Exp ']' .                      (rule 44)

	"and"          reduce using rule 44
	"break"        reduce using rule 44
	"do"           reduce using rule 44
	"else"         reduce using rule 44
	"elseif"       reduce using rule 44
	"end"          reduce using rule 44
	"for"          reduce using rule 44
	"function"     reduce using rule 44
	"goto"         reduce using rule 44
	"if"           reduce using rule 44
	"local"        reduce using rule 44
	"or"           reduce using rule 44
	"repeat"       reduce using rule 44
	"return"       reduce using rule 44
	"then"         reduce using rule 44
	"until"        reduce using rule 44
	"while"        reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            reduce using rule 44
	'/'            reduce using rule 44
	'%'            reduce using rule 44
	'^'            reduce using rule 44
	'&'            reduce using rule 44
	'~'            reduce using rule 44
	'|'            reduce using rule 44
	"<<"           reduce using rule 44
	">>"           reduce using rule 44
	"//"           reduce using rule 44
	"=="           reduce using rule 44
	"~="           reduce using rule 44
	"<="           reduce using rule 44
	">="           reduce using rule 44
	'<'            reduce using rule 44
	'>'            reduce using rule 44
	'='            reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	"::"           reduce using rule 44
	';'            reduce using rule 44
	':'            reduce using rule 44
	','            reduce using rule 44
	'.'            reduce using rule 44
	".."           reduce using rule 44
	Name           reduce using rule 44
	LiteralString  reduce using rule 44
	%eof           reduce using rule 44


State 150

	Functioncall -> Prefixexp ':' Name Args .           (rule 66)

	"and"          reduce using rule 66
	"break"        reduce using rule 66
	"do"           reduce using rule 66
	"else"         reduce using rule 66
	"elseif"       reduce using rule 66
	"end"          reduce using rule 66
	"for"          reduce using rule 66
	"function"     reduce using rule 66
	"goto"         reduce using rule 66
	"if"           reduce using rule 66
	"local"        reduce using rule 66
	"or"           reduce using rule 66
	"repeat"       reduce using rule 66
	"return"       reduce using rule 66
	"then"         reduce using rule 66
	"until"        reduce using rule 66
	"while"        reduce using rule 66
	'+'            reduce using rule 66
	'-'            reduce using rule 66
	'*'            reduce using rule 66
	'/'            reduce using rule 66
	'%'            reduce using rule 66
	'^'            reduce using rule 66
	'&'            reduce using rule 66
	'~'            reduce using rule 66
	'|'            reduce using rule 66
	"<<"           reduce using rule 66
	">>"           reduce using rule 66
	"//"           reduce using rule 66
	"=="           reduce using rule 66
	"~="           reduce using rule 66
	"<="           reduce using rule 66
	">="           reduce using rule 66
	'<'            reduce using rule 66
	'>'            reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	'{'            reduce using rule 66
	'}'            reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	"::"           reduce using rule 66
	';'            reduce using rule 66
	':'            reduce using rule 66
	','            reduce using rule 66
	'.'            reduce using rule 66
	".."           reduce using rule 66
	Name           reduce using rule 66
	LiteralString  reduce using rule 66
	%eof           reduce using rule 66


State 151

	Explist -> Exp ',' . Explist                        (rule 49)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Explist        goto state 153
	Exp            goto state 70
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 152

	Retstat -> "return" Explist ';' .                   (rule 31)

	"else"         reduce using rule 31
	"elseif"       reduce using rule 31
	"end"          reduce using rule 31
	"until"        reduce using rule 31
	%eof           reduce using rule 31


State 153

	Explist -> Exp ',' Explist .                        (rule 49)

	"break"        reduce using rule 49
	"do"           reduce using rule 49
	"else"         reduce using rule 49
	"elseif"       reduce using rule 49
	"end"          reduce using rule 49
	"for"          reduce using rule 49
	"function"     reduce using rule 49
	"goto"         reduce using rule 49
	"if"           reduce using rule 49
	"local"        reduce using rule 49
	"repeat"       reduce using rule 49
	"return"       reduce using rule 49
	"until"        reduce using rule 49
	"while"        reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	"::"           reduce using rule 49
	';'            reduce using rule 49
	Name           reduce using rule 49
	%eof           reduce using rule 49


State 154

	Stat -> "for" Name '=' Exp ',' . Exp ',' Exp "do" Block "end"    (rule 16)
	Stat -> "for" Name '=' Exp ',' . Exp "do" Block "end"    (rule 17)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 175
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 155

	Stat -> "for" Namelist "in" Explist "do" . Block "end"    (rule 18)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22

	Block          goto state 174
	StatList       goto state 3
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 156

	FuncnameDotList -> FuncnameDotList '.' Name .       (rule 40)

	'('            reduce using rule 40
	':'            reduce using rule 40
	'.'            reduce using rule 40


State 157

	Funcname -> Name FuncnameDotList ':' Name .         (rule 37)

	'('            reduce using rule 37


State 158

	Funcbody -> '(' Parlist ')' . Block "end"           (rule 71)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22

	Block          goto state 173
	StatList       goto state 3
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 159

	Parlist -> Namelist ',' . "..."                     (rule 72)

	"..."          shift, and enter state 172


State 160

	Stat -> "if" Exp "then" Block ElseIfList . ElseBlock "end"    (rule 15)

	"else"         shift, and enter state 171
	"end"          reduce using rule 25

	ElseBlock      goto state 170

State 161

	ElseIfList -> "elseif" . Exp "then" Block ElseIfList    (rule 24)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 169
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 162

	Attnamelist -> Name Attrib ',' Attnamelist .        (rule 28)

	"break"        reduce using rule 28
	"do"           reduce using rule 28
	"else"         reduce using rule 28
	"elseif"       reduce using rule 28
	"end"          reduce using rule 28
	"for"          reduce using rule 28
	"function"     reduce using rule 28
	"goto"         reduce using rule 28
	"if"           reduce using rule 28
	"local"        reduce using rule 28
	"repeat"       reduce using rule 28
	"return"       reduce using rule 28
	"until"        reduce using rule 28
	"while"        reduce using rule 28
	'='            reduce using rule 28
	'('            reduce using rule 28
	"::"           reduce using rule 28
	';'            reduce using rule 28
	Name           reduce using rule 28
	%eof           reduce using rule 28


State 163

	Attrib -> '<' Name '>' .                            (rule 29)

	"break"        reduce using rule 29
	"do"           reduce using rule 29
	"else"         reduce using rule 29
	"elseif"       reduce using rule 29
	"end"          reduce using rule 29
	"for"          reduce using rule 29
	"function"     reduce using rule 29
	"goto"         reduce using rule 29
	"if"           reduce using rule 29
	"local"        reduce using rule 29
	"repeat"       reduce using rule 29
	"return"       reduce using rule 29
	"until"        reduce using rule 29
	"while"        reduce using rule 29
	'='            reduce using rule 29
	'('            reduce using rule 29
	"::"           reduce using rule 29
	';'            reduce using rule 29
	','            reduce using rule 29
	Name           reduce using rule 29
	%eof           reduce using rule 29


State 164

	Stat -> "while" Exp "do" Block "end" .              (rule 13)

	"break"        reduce using rule 13
	"do"           reduce using rule 13
	"else"         reduce using rule 13
	"elseif"       reduce using rule 13
	"end"          reduce using rule 13
	"for"          reduce using rule 13
	"function"     reduce using rule 13
	"goto"         reduce using rule 13
	"if"           reduce using rule 13
	"local"        reduce using rule 13
	"repeat"       reduce using rule 13
	"return"       reduce using rule 13
	"until"        reduce using rule 13
	"while"        reduce using rule 13
	'('            reduce using rule 13
	"::"           reduce using rule 13
	';'            reduce using rule 13
	Name           reduce using rule 13
	%eof           reduce using rule 13


State 165

	Fieldlist -> Field Fieldsep Fieldlist .             (rule 76)

	'}'            reduce using rule 76


State 166

	Field -> '[' Exp ']' . '=' Exp                      (rule 78)

	'='            shift, and enter state 168


State 167

	Exp -> Exp . Binop Exp                              (rule 60)
	Field -> Name '=' Exp .                             (rule 79)

	"and"          shift, and enter state 87
	"or"           shift, and enter state 88
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	'}'            reduce using rule 79
	';'            reduce using rule 79
	','            reduce using rule 79
	".."           shift, and enter state 108

	Binop          goto state 86

State 168

	Field -> '[' Exp ']' '=' . Exp                      (rule 78)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 183
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 169

	ElseIfList -> "elseif" Exp . "then" Block ElseIfList    (rule 24)
	Exp -> Exp . Binop Exp                              (rule 60)

	"and"          shift, and enter state 87
	"or"           shift, and enter state 88
	"then"         shift, and enter state 182
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	".."           shift, and enter state 108

	Binop          goto state 86

State 170

	Stat -> "if" Exp "then" Block ElseIfList ElseBlock . "end"    (rule 15)

	"end"          shift, and enter state 181


State 171

	ElseBlock -> "else" . Block                         (rule 26)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22

	Block          goto state 180
	StatList       goto state 3
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 172

	Parlist -> Namelist ',' "..." .                     (rule 72)

	')'            reduce using rule 72


State 173

	Funcbody -> '(' Parlist ')' Block . "end"           (rule 71)

	"end"          shift, and enter state 179


State 174

	Stat -> "for" Namelist "in" Explist "do" Block . "end"    (rule 18)

	"end"          shift, and enter state 178


State 175

	Stat -> "for" Name '=' Exp ',' Exp . ',' Exp "do" Block "end"    (rule 16)
	Stat -> "for" Name '=' Exp ',' Exp . "do" Block "end"    (rule 17)
	Exp -> Exp . Binop Exp                              (rule 60)

	"and"          shift, and enter state 87
	"do"           shift, and enter state 176
	"or"           shift, and enter state 88
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	','            shift, and enter state 177
	".."           shift, and enter state 108

	Binop          goto state 86

State 176

	Stat -> "for" Name '=' Exp ',' Exp "do" . Block "end"    (rule 17)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22

	Block          goto state 186
	StatList       goto state 3
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 177

	Stat -> "for" Name '=' Exp ',' Exp ',' . Exp "do" Block "end"    (rule 16)

	"false"        shift, and enter state 32
	"function"     shift, and enter state 33
	"nil"          shift, and enter state 34
	"not"          shift, and enter state 35
	"true"         shift, and enter state 36
	'-'            shift, and enter state 37
	'#'            shift, and enter state 38
	'~'            shift, and enter state 39
	'('            shift, and enter state 19
	'{'            shift, and enter state 40
	"..."          shift, and enter state 41
	Integer        shift, and enter state 42
	Float          shift, and enter state 43
	Name           shift, and enter state 22
	LiteralString  shift, and enter state 44

	Var            goto state 25
	Exp            goto state 185
	Prefixexp      goto state 27
	Functioncall   goto state 28
	Functiondef    goto state 29
	Tableconstructorgoto state 30
	Unop           goto state 31

State 178

	Stat -> "for" Namelist "in" Explist "do" Block "end" .    (rule 18)

	"break"        reduce using rule 18
	"do"           reduce using rule 18
	"else"         reduce using rule 18
	"elseif"       reduce using rule 18
	"end"          reduce using rule 18
	"for"          reduce using rule 18
	"function"     reduce using rule 18
	"goto"         reduce using rule 18
	"if"           reduce using rule 18
	"local"        reduce using rule 18
	"repeat"       reduce using rule 18
	"return"       reduce using rule 18
	"until"        reduce using rule 18
	"while"        reduce using rule 18
	'('            reduce using rule 18
	"::"           reduce using rule 18
	';'            reduce using rule 18
	Name           reduce using rule 18
	%eof           reduce using rule 18


State 179

	Funcbody -> '(' Parlist ')' Block "end" .           (rule 71)

	"and"          reduce using rule 71
	"break"        reduce using rule 71
	"do"           reduce using rule 71
	"else"         reduce using rule 71
	"elseif"       reduce using rule 71
	"end"          reduce using rule 71
	"for"          reduce using rule 71
	"function"     reduce using rule 71
	"goto"         reduce using rule 71
	"if"           reduce using rule 71
	"local"        reduce using rule 71
	"or"           reduce using rule 71
	"repeat"       reduce using rule 71
	"return"       reduce using rule 71
	"then"         reduce using rule 71
	"until"        reduce using rule 71
	"while"        reduce using rule 71
	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'*'            reduce using rule 71
	'/'            reduce using rule 71
	'%'            reduce using rule 71
	'^'            reduce using rule 71
	'&'            reduce using rule 71
	'~'            reduce using rule 71
	'|'            reduce using rule 71
	"<<"           reduce using rule 71
	">>"           reduce using rule 71
	"//"           reduce using rule 71
	"=="           reduce using rule 71
	"~="           reduce using rule 71
	"<="           reduce using rule 71
	">="           reduce using rule 71
	'<'            reduce using rule 71
	'>'            reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	'}'            reduce using rule 71
	']'            reduce using rule 71
	"::"           reduce using rule 71
	';'            reduce using rule 71
	','            reduce using rule 71
	".."           reduce using rule 71
	Name           reduce using rule 71
	%eof           reduce using rule 71


State 180

	ElseBlock -> "else" Block .                         (rule 26)

	"end"          reduce using rule 26


State 181

	Stat -> "if" Exp "then" Block ElseIfList ElseBlock "end" .    (rule 15)

	"break"        reduce using rule 15
	"do"           reduce using rule 15
	"else"         reduce using rule 15
	"elseif"       reduce using rule 15
	"end"          reduce using rule 15
	"for"          reduce using rule 15
	"function"     reduce using rule 15
	"goto"         reduce using rule 15
	"if"           reduce using rule 15
	"local"        reduce using rule 15
	"repeat"       reduce using rule 15
	"return"       reduce using rule 15
	"until"        reduce using rule 15
	"while"        reduce using rule 15
	'('            reduce using rule 15
	"::"           reduce using rule 15
	';'            reduce using rule 15
	Name           reduce using rule 15
	%eof           reduce using rule 15


State 182

	ElseIfList -> "elseif" Exp "then" . Block ElseIfList    (rule 24)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22

	Block          goto state 184
	StatList       goto state 3
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 183

	Exp -> Exp . Binop Exp                              (rule 60)
	Field -> '[' Exp ']' '=' Exp .                      (rule 78)

	"and"          shift, and enter state 87
	"or"           shift, and enter state 88
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	'}'            reduce using rule 78
	';'            reduce using rule 78
	','            reduce using rule 78
	".."           shift, and enter state 108

	Binop          goto state 86

State 184

	ElseIfList -> "elseif" Exp "then" Block . ElseIfList    (rule 24)

	"else"         reduce using rule 23
	"elseif"       shift, and enter state 161
	"end"          reduce using rule 23

	ElseIfList     goto state 189

State 185

	Stat -> "for" Name '=' Exp ',' Exp ',' Exp . "do" Block "end"    (rule 16)
	Exp -> Exp . Binop Exp                              (rule 60)

	"and"          shift, and enter state 87
	"do"           shift, and enter state 188
	"or"           shift, and enter state 88
	'+'            shift, and enter state 90
	'-'            shift, and enter state 91
	'*'            shift, and enter state 92
	'/'            shift, and enter state 93
	'%'            shift, and enter state 94
	'^'            shift, and enter state 95
	'&'            shift, and enter state 96
	'~'            shift, and enter state 97
	'|'            shift, and enter state 98
	"<<"           shift, and enter state 99
	">>"           shift, and enter state 100
	"//"           shift, and enter state 101
	"=="           shift, and enter state 102
	"~="           shift, and enter state 103
	"<="           shift, and enter state 104
	">="           shift, and enter state 105
	'<'            shift, and enter state 106
	'>'            shift, and enter state 107
	".."           shift, and enter state 108

	Binop          goto state 86

State 186

	Stat -> "for" Name '=' Exp ',' Exp "do" Block . "end"    (rule 17)

	"end"          shift, and enter state 187


State 187

	Stat -> "for" Name '=' Exp ',' Exp "do" Block "end" .    (rule 17)

	"break"        reduce using rule 17
	"do"           reduce using rule 17
	"else"         reduce using rule 17
	"elseif"       reduce using rule 17
	"end"          reduce using rule 17
	"for"          reduce using rule 17
	"function"     reduce using rule 17
	"goto"         reduce using rule 17
	"if"           reduce using rule 17
	"local"        reduce using rule 17
	"repeat"       reduce using rule 17
	"return"       reduce using rule 17
	"until"        reduce using rule 17
	"while"        reduce using rule 17
	'('            reduce using rule 17
	"::"           reduce using rule 17
	';'            reduce using rule 17
	Name           reduce using rule 17
	%eof           reduce using rule 17


State 188

	Stat -> "for" Name '=' Exp ',' Exp ',' Exp "do" . Block "end"    (rule 16)

	"break"        shift, and enter state 10
	"do"           shift, and enter state 11
	"for"          shift, and enter state 12
	"function"     shift, and enter state 13
	"goto"         shift, and enter state 14
	"if"           shift, and enter state 15
	"local"        shift, and enter state 16
	"repeat"       shift, and enter state 17
	"while"        shift, and enter state 18
	'('            shift, and enter state 19
	"::"           shift, and enter state 20
	';'            shift, and enter state 21
	Name           shift, and enter state 22

	Block          goto state 190
	StatList       goto state 3
	Stat           goto state 4
	Label          goto state 5
	Varlist        goto state 6
	Var            goto state 7
	Prefixexp      goto state 8
	Functioncall   goto state 9

State 189

	ElseIfList -> "elseif" Exp "then" Block ElseIfList .    (rule 24)

	"else"         reduce using rule 24
	"end"          reduce using rule 24


State 190

	Stat -> "for" Name '=' Exp ',' Exp ',' Exp "do" Block . "end"    (rule 16)

	"end"          shift, and enter state 191


State 191

	Stat -> "for" Name '=' Exp ',' Exp ',' Exp "do" Block "end" .    (rule 16)

	"break"        reduce using rule 16
	"do"           reduce using rule 16
	"else"         reduce using rule 16
	"elseif"       reduce using rule 16
	"end"          reduce using rule 16
	"for"          reduce using rule 16
	"function"     reduce using rule 16
	"goto"         reduce using rule 16
	"if"           reduce using rule 16
	"local"        reduce using rule 16
	"repeat"       reduce using rule 16
	"return"       reduce using rule 16
	"until"        reduce using rule 16
	"while"        reduce using rule 16
	'('            reduce using rule 16
	"::"           reduce using rule 16
	';'            reduce using rule 16
	Name           reduce using rule 16
	%eof           reduce using rule 16


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 108
Number of terminals: 59
Number of non-terminals: 30
Number of states: 192
